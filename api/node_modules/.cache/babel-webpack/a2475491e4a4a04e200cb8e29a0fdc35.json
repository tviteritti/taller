{"ast":null,"code":"/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *\t http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nimport { isUsernamePasswordOpts, isCognitoHostedOpts, isFederatedSignInOptions, isFederatedSignInOptionsCustom, hasCustomState } from './types';\nimport { Amplify, ConsoleLogger as Logger, Credentials, Hub, StorageHelper, Parser, JS, UniversalStorage, urlSafeDecode } from '@aws-amplify/core';\nimport { CookieStorage, CognitoUserPool, AuthenticationDetails, CognitoUser, CognitoUserSession, CognitoUserAttribute, CognitoIdToken, CognitoRefreshToken, CognitoAccessToken } from 'amazon-cognito-identity-js';\nimport { parse } from 'url';\nimport OAuth from './OAuth/OAuth';\nimport { default as urlListener } from './urlListener';\nimport { AuthError, NoUserPoolError } from './Errors';\nimport { AuthErrorTypes, CognitoHostedUIIdentityProvider } from './types/Auth';\nvar logger = new Logger('AuthClass');\nvar USER_ADMIN_SCOPE = 'aws.cognito.signin.user.admin'; // 10 sec, following this guide https://www.nngroup.com/articles/response-times-3-important-limits/\n\nvar OAUTH_FLOW_MS_TIMEOUT = 10 * 1000;\nvar AMPLIFY_SYMBOL = typeof Symbol !== 'undefined' && typeof Symbol.for === 'function' ? Symbol.for('amplify_default') : '@@amplify_default';\n\nvar dispatchAuthEvent = function (event, data, message) {\n  Hub.dispatch('auth', {\n    event: event,\n    data: data,\n    message: message\n  }, 'Auth', AMPLIFY_SYMBOL);\n}; // Cognito Documentation for max device\n// tslint:disable-next-line:max-line-length\n// https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_ListDevices.html#API_ListDevices_RequestSyntax\n\n\nvar MAX_DEVICES = 60;\n/**\n * Provide authentication steps\n */\n\nvar AuthClass =\n/** @class */\nfunction () {\n  /**\n   * Initialize Auth with AWS configurations\n   * @param {Object} config - Configuration of the Auth\n   */\n  function AuthClass(config) {\n    var _this = this;\n\n    this.userPool = null;\n    this.user = null;\n    this.oAuthFlowInProgress = false;\n    this.Credentials = Credentials;\n\n    this.wrapRefreshSessionCallback = function (callback) {\n      var wrapped = function (error, data) {\n        if (data) {\n          dispatchAuthEvent('tokenRefresh', undefined, \"New token retrieved\");\n        } else {\n          dispatchAuthEvent('tokenRefresh_failure', error, \"Failed to retrieve new token\");\n        }\n\n        return callback(error, data);\n      };\n\n      return wrapped;\n    }; // prettier-ignore\n\n\n    this.configure(config);\n    this.currentCredentials = this.currentCredentials.bind(this);\n    this.currentUserCredentials = this.currentUserCredentials.bind(this);\n    Hub.listen('auth', function (_a) {\n      var payload = _a.payload;\n      var event = payload.event;\n\n      switch (event) {\n        case 'signIn':\n          _this._storage.setItem('amplify-signin-with-hostedUI', 'false');\n\n          break;\n\n        case 'signOut':\n          _this._storage.removeItem('amplify-signin-with-hostedUI');\n\n          break;\n\n        case 'cognitoHostedUI':\n          _this._storage.setItem('amplify-signin-with-hostedUI', 'true');\n\n          break;\n      }\n    });\n  }\n\n  AuthClass.prototype.getModuleName = function () {\n    return 'Auth';\n  };\n\n  AuthClass.prototype.configure = function (config) {\n    var _this = this;\n\n    if (!config) return this._config || {};\n    logger.debug('configure Auth');\n    var conf = Object.assign({}, this._config, Parser.parseMobilehubConfig(config).Auth, config);\n    this._config = conf;\n    var _a = this._config,\n        userPoolId = _a.userPoolId,\n        userPoolWebClientId = _a.userPoolWebClientId,\n        cookieStorage = _a.cookieStorage,\n        oauth = _a.oauth,\n        region = _a.region,\n        identityPoolId = _a.identityPoolId,\n        mandatorySignIn = _a.mandatorySignIn,\n        refreshHandlers = _a.refreshHandlers,\n        identityPoolRegion = _a.identityPoolRegion,\n        clientMetadata = _a.clientMetadata,\n        endpoint = _a.endpoint;\n\n    if (!this._config.storage) {\n      // backward compatability\n      if (cookieStorage) this._storage = new CookieStorage(cookieStorage);else {\n        this._storage = config.ssr ? new UniversalStorage() : new StorageHelper().getStorage();\n      }\n    } else {\n      if (!this._isValidAuthStorage(this._config.storage)) {\n        logger.error('The storage in the Auth config is not valid!');\n        throw new Error('Empty storage object');\n      }\n\n      this._storage = this._config.storage;\n    }\n\n    this._storageSync = Promise.resolve();\n\n    if (typeof this._storage['sync'] === 'function') {\n      this._storageSync = this._storage['sync']();\n    }\n\n    if (userPoolId) {\n      var userPoolData = {\n        UserPoolId: userPoolId,\n        ClientId: userPoolWebClientId,\n        endpoint: endpoint\n      };\n      userPoolData.Storage = this._storage;\n      this.userPool = new CognitoUserPool(userPoolData, this.wrapRefreshSessionCallback);\n    }\n\n    this.Credentials.configure({\n      mandatorySignIn: mandatorySignIn,\n      region: identityPoolRegion || region,\n      userPoolId: userPoolId,\n      identityPoolId: identityPoolId,\n      refreshHandlers: refreshHandlers,\n      storage: this._storage\n    }); // initialize cognitoauth client if hosted ui options provided\n    // to keep backward compatibility:\n\n    var cognitoHostedUIConfig = oauth ? isCognitoHostedOpts(this._config.oauth) ? oauth : oauth.awsCognito : undefined;\n\n    if (cognitoHostedUIConfig) {\n      var cognitoAuthParams = Object.assign({\n        cognitoClientId: userPoolWebClientId,\n        UserPoolId: userPoolId,\n        domain: cognitoHostedUIConfig['domain'],\n        scopes: cognitoHostedUIConfig['scope'],\n        redirectSignIn: cognitoHostedUIConfig['redirectSignIn'],\n        redirectSignOut: cognitoHostedUIConfig['redirectSignOut'],\n        responseType: cognitoHostedUIConfig['responseType'],\n        Storage: this._storage,\n        urlOpener: cognitoHostedUIConfig['urlOpener'],\n        clientMetadata: clientMetadata\n      }, cognitoHostedUIConfig['options']);\n      this._oAuthHandler = new OAuth({\n        scopes: cognitoAuthParams.scopes,\n        config: cognitoAuthParams,\n        cognitoClientId: cognitoAuthParams.cognitoClientId\n      }); // **NOTE** - Remove this in a future major release as it is a breaking change\n      // Prevents _handleAuthResponse from being called multiple times in Expo\n      // See https://github.com/aws-amplify/amplify-js/issues/4388\n\n      var usedResponseUrls_1 = {};\n      urlListener(function (_a) {\n        var url = _a.url;\n\n        if (usedResponseUrls_1[url]) {\n          return;\n        }\n\n        usedResponseUrls_1[url] = true;\n\n        _this._handleAuthResponse(url);\n      });\n    }\n\n    dispatchAuthEvent('configured', null, \"The Auth category has been configured successfully\");\n    return this._config;\n  };\n  /**\n   * Sign up with username, password and other attributes like phone, email\n   * @param {String | object} params - The user attributes used for signin\n   * @param {String[]} restOfAttrs - for the backward compatability\n   * @return - A promise resolves callback data if success\n   */\n\n\n  AuthClass.prototype.signUp = function (params) {\n    var _this = this;\n\n    var restOfAttrs = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      restOfAttrs[_i - 1] = arguments[_i];\n    }\n\n    if (!this.userPool) {\n      return this.rejectNoUserPool();\n    }\n\n    var username = null;\n    var password = null;\n    var attributes = [];\n    var validationData = null;\n    var clientMetadata;\n\n    if (params && typeof params === 'string') {\n      username = params;\n      password = restOfAttrs ? restOfAttrs[0] : null;\n      var email = restOfAttrs ? restOfAttrs[1] : null;\n      var phone_number = restOfAttrs ? restOfAttrs[2] : null;\n      if (email) attributes.push(new CognitoUserAttribute({\n        Name: 'email',\n        Value: email\n      }));\n      if (phone_number) attributes.push(new CognitoUserAttribute({\n        Name: 'phone_number',\n        Value: phone_number\n      }));\n    } else if (params && typeof params === 'object') {\n      username = params['username'];\n      password = params['password'];\n\n      if (params && params.clientMetadata) {\n        clientMetadata = params.clientMetadata;\n      } else if (this._config.clientMetadata) {\n        clientMetadata = this._config.clientMetadata;\n      }\n\n      var attrs_1 = params['attributes'];\n\n      if (attrs_1) {\n        Object.keys(attrs_1).map(function (key) {\n          attributes.push(new CognitoUserAttribute({\n            Name: key,\n            Value: attrs_1[key]\n          }));\n        });\n      }\n\n      var validationDataObject_1 = params['validationData'];\n\n      if (validationDataObject_1) {\n        validationData = [];\n        Object.keys(validationDataObject_1).map(function (key) {\n          validationData.push(new CognitoUserAttribute({\n            Name: key,\n            Value: validationDataObject_1[key]\n          }));\n        });\n      }\n    } else {\n      return this.rejectAuthError(AuthErrorTypes.SignUpError);\n    }\n\n    if (!username) {\n      return this.rejectAuthError(AuthErrorTypes.EmptyUsername);\n    }\n\n    if (!password) {\n      return this.rejectAuthError(AuthErrorTypes.EmptyPassword);\n    }\n\n    logger.debug('signUp attrs:', attributes);\n    logger.debug('signUp validation data:', validationData);\n    return new Promise(function (resolve, reject) {\n      _this.userPool.signUp(username, password, attributes, validationData, function (err, data) {\n        if (err) {\n          dispatchAuthEvent('signUp_failure', err, username + \" failed to signup\");\n          reject(err);\n        } else {\n          dispatchAuthEvent('signUp', data, username + \" has signed up successfully\");\n          resolve(data);\n        }\n      }, clientMetadata);\n    });\n  };\n  /**\n   * Send the verification code to confirm sign up\n   * @param {String} username - The username to be confirmed\n   * @param {String} code - The verification code\n   * @param {ConfirmSignUpOptions} options - other options for confirm signup\n   * @return - A promise resolves callback data if success\n   */\n\n\n  AuthClass.prototype.confirmSignUp = function (username, code, options) {\n    if (!this.userPool) {\n      return this.rejectNoUserPool();\n    }\n\n    if (!username) {\n      return this.rejectAuthError(AuthErrorTypes.EmptyUsername);\n    }\n\n    if (!code) {\n      return this.rejectAuthError(AuthErrorTypes.EmptyCode);\n    }\n\n    var user = this.createCognitoUser(username);\n    var forceAliasCreation = options && typeof options.forceAliasCreation === 'boolean' ? options.forceAliasCreation : true;\n    var clientMetadata;\n\n    if (options && options.clientMetadata) {\n      clientMetadata = options.clientMetadata;\n    } else if (this._config.clientMetadata) {\n      clientMetadata = this._config.clientMetadata;\n    }\n\n    return new Promise(function (resolve, reject) {\n      user.confirmRegistration(code, forceAliasCreation, function (err, data) {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(data);\n        }\n      }, clientMetadata);\n    });\n  };\n  /**\n   * Resend the verification code\n   * @param {String} username - The username to be confirmed\n   * @param {ClientMetadata} clientMetadata - Metadata to be passed to Cognito Lambda triggers\n   * @return - A promise resolves code delivery details if successful\n   */\n\n\n  AuthClass.prototype.resendSignUp = function (username, clientMetadata) {\n    if (clientMetadata === void 0) {\n      clientMetadata = this._config.clientMetadata;\n    }\n\n    if (!this.userPool) {\n      return this.rejectNoUserPool();\n    }\n\n    if (!username) {\n      return this.rejectAuthError(AuthErrorTypes.EmptyUsername);\n    }\n\n    var user = this.createCognitoUser(username);\n    return new Promise(function (resolve, reject) {\n      user.resendConfirmationCode(function (err, data) {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(data);\n        }\n      }, clientMetadata);\n    });\n  };\n  /**\n   * Sign in\n   * @param {String | SignInOpts} usernameOrSignInOpts - The username to be signed in or the sign in options\n   * @param {String} password - The password of the username\n   * @return - A promise resolves the CognitoUser\n   */\n\n\n  AuthClass.prototype.signIn = function (usernameOrSignInOpts, pw, clientMetadata) {\n    if (clientMetadata === void 0) {\n      clientMetadata = this._config.clientMetadata;\n    }\n\n    if (!this.userPool) {\n      return this.rejectNoUserPool();\n    }\n\n    var username = null;\n    var password = null;\n    var validationData = {}; // for backward compatibility\n\n    if (typeof usernameOrSignInOpts === 'string') {\n      username = usernameOrSignInOpts;\n      password = pw;\n    } else if (isUsernamePasswordOpts(usernameOrSignInOpts)) {\n      if (typeof pw !== 'undefined') {\n        logger.warn('The password should be defined under the first parameter object!');\n      }\n\n      username = usernameOrSignInOpts.username;\n      password = usernameOrSignInOpts.password;\n      validationData = usernameOrSignInOpts.validationData;\n    } else {\n      return this.rejectAuthError(AuthErrorTypes.InvalidUsername);\n    }\n\n    if (!username) {\n      return this.rejectAuthError(AuthErrorTypes.EmptyUsername);\n    }\n\n    var authDetails = new AuthenticationDetails({\n      Username: username,\n      Password: password,\n      ValidationData: validationData,\n      ClientMetadata: clientMetadata\n    });\n\n    if (password) {\n      return this.signInWithPassword(authDetails);\n    } else {\n      return this.signInWithoutPassword(authDetails);\n    }\n  };\n  /**\n   * Return an object with the authentication callbacks\n   * @param {CognitoUser} user - the cognito user object\n   * @param {} resolve - function called when resolving the current step\n   * @param {} reject - function called when rejecting the current step\n   * @return - an object with the callback methods for user authentication\n   */\n\n\n  AuthClass.prototype.authCallbacks = function (user, resolve, reject) {\n    var _this = this;\n\n    var that = this;\n    return {\n      onSuccess: function (session) {\n        return __awaiter(_this, void 0, void 0, function () {\n          var cred, e_1, currentUser, e_2;\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                logger.debug(session);\n                delete user['challengeName'];\n                delete user['challengeParam'];\n                _a.label = 1;\n\n              case 1:\n                _a.trys.push([1, 4, 5, 9]);\n\n                return [4\n                /*yield*/\n                , this.Credentials.clear()];\n\n              case 2:\n                _a.sent();\n\n                return [4\n                /*yield*/\n                , this.Credentials.set(session, 'session')];\n\n              case 3:\n                cred = _a.sent();\n                logger.debug('succeed to get cognito credentials', cred);\n                return [3\n                /*break*/\n                , 9];\n\n              case 4:\n                e_1 = _a.sent();\n                logger.debug('cannot get cognito credentials', e_1);\n                return [3\n                /*break*/\n                , 9];\n\n              case 5:\n                _a.trys.push([5, 7,, 8]);\n\n                return [4\n                /*yield*/\n                , this.currentUserPoolUser()];\n\n              case 6:\n                currentUser = _a.sent();\n                that.user = currentUser;\n                dispatchAuthEvent('signIn', currentUser, \"A user \" + user.getUsername() + \" has been signed in\");\n                resolve(currentUser);\n                return [3\n                /*break*/\n                , 8];\n\n              case 7:\n                e_2 = _a.sent();\n                logger.error('Failed to get the signed in user', e_2);\n                reject(e_2);\n                return [3\n                /*break*/\n                , 8];\n\n              case 8:\n                return [7\n                /*endfinally*/\n                ];\n\n              case 9:\n                return [2\n                /*return*/\n                ];\n            }\n          });\n        });\n      },\n      onFailure: function (err) {\n        logger.debug('signIn failure', err);\n        dispatchAuthEvent('signIn_failure', err, user.getUsername() + \" failed to signin\");\n        reject(err);\n      },\n      customChallenge: function (challengeParam) {\n        logger.debug('signIn custom challenge answer required');\n        user['challengeName'] = 'CUSTOM_CHALLENGE';\n        user['challengeParam'] = challengeParam;\n        resolve(user);\n      },\n      mfaRequired: function (challengeName, challengeParam) {\n        logger.debug('signIn MFA required');\n        user['challengeName'] = challengeName;\n        user['challengeParam'] = challengeParam;\n        resolve(user);\n      },\n      mfaSetup: function (challengeName, challengeParam) {\n        logger.debug('signIn mfa setup', challengeName);\n        user['challengeName'] = challengeName;\n        user['challengeParam'] = challengeParam;\n        resolve(user);\n      },\n      newPasswordRequired: function (userAttributes, requiredAttributes) {\n        logger.debug('signIn new password');\n        user['challengeName'] = 'NEW_PASSWORD_REQUIRED';\n        user['challengeParam'] = {\n          userAttributes: userAttributes,\n          requiredAttributes: requiredAttributes\n        };\n        resolve(user);\n      },\n      totpRequired: function (challengeName, challengeParam) {\n        logger.debug('signIn totpRequired');\n        user['challengeName'] = challengeName;\n        user['challengeParam'] = challengeParam;\n        resolve(user);\n      },\n      selectMFAType: function (challengeName, challengeParam) {\n        logger.debug('signIn selectMFAType', challengeName);\n        user['challengeName'] = challengeName;\n        user['challengeParam'] = challengeParam;\n        resolve(user);\n      }\n    };\n  };\n  /**\n   * Sign in with a password\n   * @private\n   * @param {AuthenticationDetails} authDetails - the user sign in data\n   * @return - A promise resolves the CognitoUser object if success or mfa required\n   */\n\n\n  AuthClass.prototype.signInWithPassword = function (authDetails) {\n    var _this = this;\n\n    if (this.pendingSignIn) {\n      throw new Error('Pending sign-in attempt already in progress');\n    }\n\n    var user = this.createCognitoUser(authDetails.getUsername());\n    this.pendingSignIn = new Promise(function (resolve, reject) {\n      user.authenticateUser(authDetails, _this.authCallbacks(user, function (value) {\n        _this.pendingSignIn = null;\n        resolve(value);\n      }, function (error) {\n        _this.pendingSignIn = null;\n        reject(error);\n      }));\n    });\n    return this.pendingSignIn;\n  };\n  /**\n   * Sign in without a password\n   * @private\n   * @param {AuthenticationDetails} authDetails - the user sign in data\n   * @return - A promise resolves the CognitoUser object if success or mfa required\n   */\n\n\n  AuthClass.prototype.signInWithoutPassword = function (authDetails) {\n    var _this = this;\n\n    var user = this.createCognitoUser(authDetails.getUsername());\n    user.setAuthenticationFlowType('CUSTOM_AUTH');\n    return new Promise(function (resolve, reject) {\n      user.initiateAuth(authDetails, _this.authCallbacks(user, resolve, reject));\n    });\n  };\n  /**\n   * This was previously used by an authenticated user to get MFAOptions,\n   * but no longer returns a meaningful response. Refer to the documentation for\n   * how to setup and use MFA: https://docs.amplify.aws/lib/auth/mfa/q/platform/js\n   * @deprecated\n   * @param {CognitoUser} user - the current user\n   * @return - A promise resolves the current preferred mfa option if success\n   */\n\n\n  AuthClass.prototype.getMFAOptions = function (user) {\n    return new Promise(function (res, rej) {\n      user.getMFAOptions(function (err, mfaOptions) {\n        if (err) {\n          logger.debug('get MFA Options failed', err);\n          rej(err);\n          return;\n        }\n\n        logger.debug('get MFA options success', mfaOptions);\n        res(mfaOptions);\n        return;\n      });\n    });\n  };\n  /**\n   * get preferred mfa method\n   * @param {CognitoUser} user - the current cognito user\n   * @param {GetPreferredMFAOpts} params - options for getting the current user preferred MFA\n   */\n\n\n  AuthClass.prototype.getPreferredMFA = function (user, params) {\n    var _this = this;\n\n    var that = this;\n    return new Promise(function (res, rej) {\n      var clientMetadata = _this._config.clientMetadata; // TODO: verify behavior if this is override during signIn\n\n      var bypassCache = params ? params.bypassCache : false;\n      user.getUserData(function (err, data) {\n        if (err) {\n          logger.debug('getting preferred mfa failed', err);\n          rej(err);\n          return;\n        }\n\n        var mfaType = that._getMfaTypeFromUserData(data);\n\n        if (!mfaType) {\n          rej('invalid MFA Type');\n          return;\n        } else {\n          res(mfaType);\n          return;\n        }\n      }, {\n        bypassCache: bypassCache,\n        clientMetadata: clientMetadata\n      });\n    });\n  };\n\n  AuthClass.prototype._getMfaTypeFromUserData = function (data) {\n    var ret = null;\n    var preferredMFA = data.PreferredMfaSetting; // if the user has used Auth.setPreferredMFA() to setup the mfa type\n    // then the \"PreferredMfaSetting\" would exist in the response\n\n    if (preferredMFA) {\n      ret = preferredMFA;\n    } else {\n      // if mfaList exists but empty, then its noMFA\n      var mfaList = data.UserMFASettingList;\n\n      if (!mfaList) {\n        // if SMS was enabled by using Auth.enableSMS(),\n        // the response would contain MFAOptions\n        // as for now Cognito only supports for SMS, so we will say it is 'SMS_MFA'\n        // if it does not exist, then it should be NOMFA\n        var MFAOptions = data.MFAOptions;\n\n        if (MFAOptions) {\n          ret = 'SMS_MFA';\n        } else {\n          ret = 'NOMFA';\n        }\n      } else if (mfaList.length === 0) {\n        ret = 'NOMFA';\n      } else {\n        logger.debug('invalid case for getPreferredMFA', data);\n      }\n    }\n\n    return ret;\n  };\n\n  AuthClass.prototype._getUserData = function (user, params) {\n    return new Promise(function (res, rej) {\n      user.getUserData(function (err, data) {\n        if (err) {\n          logger.debug('getting user data failed', err);\n          rej(err);\n          return;\n        } else {\n          res(data);\n          return;\n        }\n      }, params);\n    });\n  };\n  /**\n   * set preferred MFA method\n   * @param {CognitoUser} user - the current Cognito user\n   * @param {string} mfaMethod - preferred mfa method\n   * @return - A promise resolve if success\n   */\n\n\n  AuthClass.prototype.setPreferredMFA = function (user, mfaMethod) {\n    return __awaiter(this, void 0, void 0, function () {\n      var clientMetadata, userData, smsMfaSettings, totpMfaSettings, _a, mfaList, currentMFAType, that;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            clientMetadata = this._config.clientMetadata;\n            return [4\n            /*yield*/\n            , this._getUserData(user, {\n              bypassCache: true,\n              clientMetadata: clientMetadata\n            })];\n\n          case 1:\n            userData = _b.sent();\n            smsMfaSettings = null;\n            totpMfaSettings = null;\n            _a = mfaMethod;\n\n            switch (_a) {\n              case 'TOTP':\n                return [3\n                /*break*/\n                , 2];\n\n              case 'SOFTWARE_TOKEN_MFA':\n                return [3\n                /*break*/\n                , 2];\n\n              case 'SMS':\n                return [3\n                /*break*/\n                , 3];\n\n              case 'SMS_MFA':\n                return [3\n                /*break*/\n                , 3];\n\n              case 'NOMFA':\n                return [3\n                /*break*/\n                , 4];\n            }\n\n            return [3\n            /*break*/\n            , 6];\n\n          case 2:\n            totpMfaSettings = {\n              PreferredMfa: true,\n              Enabled: true\n            };\n            return [3\n            /*break*/\n            , 7];\n\n          case 3:\n            smsMfaSettings = {\n              PreferredMfa: true,\n              Enabled: true\n            };\n            return [3\n            /*break*/\n            , 7];\n\n          case 4:\n            mfaList = userData['UserMFASettingList'];\n            return [4\n            /*yield*/\n            , this._getMfaTypeFromUserData(userData)];\n\n          case 5:\n            currentMFAType = _b.sent();\n\n            if (currentMFAType === 'NOMFA') {\n              return [2\n              /*return*/\n              , Promise.resolve('No change for mfa type')];\n            } else if (currentMFAType === 'SMS_MFA') {\n              smsMfaSettings = {\n                PreferredMfa: false,\n                Enabled: false\n              };\n            } else if (currentMFAType === 'SOFTWARE_TOKEN_MFA') {\n              totpMfaSettings = {\n                PreferredMfa: false,\n                Enabled: false\n              };\n            } else {\n              return [2\n              /*return*/\n              , this.rejectAuthError(AuthErrorTypes.InvalidMFA)];\n            } // if there is a UserMFASettingList in the response\n            // we need to disable every mfa type in that list\n\n\n            if (mfaList && mfaList.length !== 0) {\n              // to disable SMS or TOTP if exists in that list\n              mfaList.forEach(function (mfaType) {\n                if (mfaType === 'SMS_MFA') {\n                  smsMfaSettings = {\n                    PreferredMfa: false,\n                    Enabled: false\n                  };\n                } else if (mfaType === 'SOFTWARE_TOKEN_MFA') {\n                  totpMfaSettings = {\n                    PreferredMfa: false,\n                    Enabled: false\n                  };\n                }\n              });\n            }\n\n            return [3\n            /*break*/\n            , 7];\n\n          case 6:\n            logger.debug('no validmfa method provided');\n            return [2\n            /*return*/\n            , this.rejectAuthError(AuthErrorTypes.NoMFA)];\n\n          case 7:\n            that = this;\n            return [2\n            /*return*/\n            , new Promise(function (res, rej) {\n              user.setUserMfaPreference(smsMfaSettings, totpMfaSettings, function (err, result) {\n                if (err) {\n                  logger.debug('Set user mfa preference error', err);\n                  return rej(err);\n                }\n\n                logger.debug('Set user mfa success', result);\n                logger.debug('Caching the latest user data into local'); // cache the latest result into user data\n\n                user.getUserData(function (err, data) {\n                  if (err) {\n                    logger.debug('getting user data failed', err);\n                    return rej(err);\n                  } else {\n                    return res(result);\n                  }\n                }, {\n                  bypassCache: true,\n                  clientMetadata: clientMetadata\n                });\n              });\n            })];\n        }\n      });\n    });\n  };\n  /**\n   * disable SMS\n   * @deprecated\n   * @param {CognitoUser} user - the current user\n   * @return - A promise resolves is success\n   */\n\n\n  AuthClass.prototype.disableSMS = function (user) {\n    return new Promise(function (res, rej) {\n      user.disableMFA(function (err, data) {\n        if (err) {\n          logger.debug('disable mfa failed', err);\n          rej(err);\n          return;\n        }\n\n        logger.debug('disable mfa succeed', data);\n        res(data);\n        return;\n      });\n    });\n  };\n  /**\n   * enable SMS\n   * @deprecated\n   * @param {CognitoUser} user - the current user\n   * @return - A promise resolves is success\n   */\n\n\n  AuthClass.prototype.enableSMS = function (user) {\n    return new Promise(function (res, rej) {\n      user.enableMFA(function (err, data) {\n        if (err) {\n          logger.debug('enable mfa failed', err);\n          rej(err);\n          return;\n        }\n\n        logger.debug('enable mfa succeed', data);\n        res(data);\n        return;\n      });\n    });\n  };\n  /**\n   * Setup TOTP\n   * @param {CognitoUser} user - the current user\n   * @return - A promise resolves with the secret code if success\n   */\n\n\n  AuthClass.prototype.setupTOTP = function (user) {\n    return new Promise(function (res, rej) {\n      user.associateSoftwareToken({\n        onFailure: function (err) {\n          logger.debug('associateSoftwareToken failed', err);\n          rej(err);\n          return;\n        },\n        associateSecretCode: function (secretCode) {\n          logger.debug('associateSoftwareToken sucess', secretCode);\n          res(secretCode);\n          return;\n        }\n      });\n    });\n  };\n  /**\n   * verify TOTP setup\n   * @param {CognitoUser} user - the current user\n   * @param {string} challengeAnswer - challenge answer\n   * @return - A promise resolves is success\n   */\n\n\n  AuthClass.prototype.verifyTotpToken = function (user, challengeAnswer) {\n    logger.debug('verification totp token', user, challengeAnswer);\n    return new Promise(function (res, rej) {\n      user.verifySoftwareToken(challengeAnswer, 'My TOTP device', {\n        onFailure: function (err) {\n          logger.debug('verifyTotpToken failed', err);\n          rej(err);\n          return;\n        },\n        onSuccess: function (data) {\n          dispatchAuthEvent('signIn', user, \"A user \" + user.getUsername() + \" has been signed in\");\n          logger.debug('verifyTotpToken success', data);\n          res(data);\n          return;\n        }\n      });\n    });\n  };\n  /**\n   * Send MFA code to confirm sign in\n   * @param {Object} user - The CognitoUser object\n   * @param {String} code - The confirmation code\n   */\n\n\n  AuthClass.prototype.confirmSignIn = function (user, code, mfaType, clientMetadata) {\n    var _this = this;\n\n    if (clientMetadata === void 0) {\n      clientMetadata = this._config.clientMetadata;\n    }\n\n    if (!code) {\n      return this.rejectAuthError(AuthErrorTypes.EmptyCode);\n    }\n\n    var that = this;\n    return new Promise(function (resolve, reject) {\n      user.sendMFACode(code, {\n        onSuccess: function (session) {\n          return __awaiter(_this, void 0, void 0, function () {\n            var cred, e_3;\n            return __generator(this, function (_a) {\n              switch (_a.label) {\n                case 0:\n                  logger.debug(session);\n                  _a.label = 1;\n\n                case 1:\n                  _a.trys.push([1, 4, 5, 6]);\n\n                  return [4\n                  /*yield*/\n                  , this.Credentials.clear()];\n\n                case 2:\n                  _a.sent();\n\n                  return [4\n                  /*yield*/\n                  , this.Credentials.set(session, 'session')];\n\n                case 3:\n                  cred = _a.sent();\n                  logger.debug('succeed to get cognito credentials', cred);\n                  return [3\n                  /*break*/\n                  , 6];\n\n                case 4:\n                  e_3 = _a.sent();\n                  logger.debug('cannot get cognito credentials', e_3);\n                  return [3\n                  /*break*/\n                  , 6];\n\n                case 5:\n                  that.user = user;\n                  dispatchAuthEvent('signIn', user, \"A user \" + user.getUsername() + \" has been signed in\");\n                  resolve(user);\n                  return [7\n                  /*endfinally*/\n                  ];\n\n                case 6:\n                  return [2\n                  /*return*/\n                  ];\n              }\n            });\n          });\n        },\n        onFailure: function (err) {\n          logger.debug('confirm signIn failure', err);\n          reject(err);\n        }\n      }, mfaType, clientMetadata);\n    });\n  };\n\n  AuthClass.prototype.completeNewPassword = function (user, password, requiredAttributes, clientMetadata) {\n    var _this = this;\n\n    if (requiredAttributes === void 0) {\n      requiredAttributes = {};\n    }\n\n    if (clientMetadata === void 0) {\n      clientMetadata = this._config.clientMetadata;\n    }\n\n    if (!password) {\n      return this.rejectAuthError(AuthErrorTypes.EmptyPassword);\n    }\n\n    var that = this;\n    return new Promise(function (resolve, reject) {\n      user.completeNewPasswordChallenge(password, requiredAttributes, {\n        onSuccess: function (session) {\n          return __awaiter(_this, void 0, void 0, function () {\n            var cred, e_4;\n            return __generator(this, function (_a) {\n              switch (_a.label) {\n                case 0:\n                  logger.debug(session);\n                  _a.label = 1;\n\n                case 1:\n                  _a.trys.push([1, 4, 5, 6]);\n\n                  return [4\n                  /*yield*/\n                  , this.Credentials.clear()];\n\n                case 2:\n                  _a.sent();\n\n                  return [4\n                  /*yield*/\n                  , this.Credentials.set(session, 'session')];\n\n                case 3:\n                  cred = _a.sent();\n                  logger.debug('succeed to get cognito credentials', cred);\n                  return [3\n                  /*break*/\n                  , 6];\n\n                case 4:\n                  e_4 = _a.sent();\n                  logger.debug('cannot get cognito credentials', e_4);\n                  return [3\n                  /*break*/\n                  , 6];\n\n                case 5:\n                  that.user = user;\n                  dispatchAuthEvent('signIn', user, \"A user \" + user.getUsername() + \" has been signed in\");\n                  resolve(user);\n                  return [7\n                  /*endfinally*/\n                  ];\n\n                case 6:\n                  return [2\n                  /*return*/\n                  ];\n              }\n            });\n          });\n        },\n        onFailure: function (err) {\n          logger.debug('completeNewPassword failure', err);\n          dispatchAuthEvent('completeNewPassword_failure', err, _this.user + \" failed to complete the new password flow\");\n          reject(err);\n        },\n        mfaRequired: function (challengeName, challengeParam) {\n          logger.debug('signIn MFA required');\n          user['challengeName'] = challengeName;\n          user['challengeParam'] = challengeParam;\n          resolve(user);\n        },\n        mfaSetup: function (challengeName, challengeParam) {\n          logger.debug('signIn mfa setup', challengeName);\n          user['challengeName'] = challengeName;\n          user['challengeParam'] = challengeParam;\n          resolve(user);\n        },\n        totpRequired: function (challengeName, challengeParam) {\n          logger.debug('signIn mfa setup', challengeName);\n          user['challengeName'] = challengeName;\n          user['challengeParam'] = challengeParam;\n          resolve(user);\n        }\n      }, clientMetadata);\n    });\n  };\n  /**\n   * Send the answer to a custom challenge\n   * @param {CognitoUser} user - The CognitoUser object\n   * @param {String} challengeResponses - The confirmation code\n   */\n\n\n  AuthClass.prototype.sendCustomChallengeAnswer = function (user, challengeResponses, clientMetadata) {\n    var _this = this;\n\n    if (clientMetadata === void 0) {\n      clientMetadata = this._config.clientMetadata;\n    }\n\n    if (!this.userPool) {\n      return this.rejectNoUserPool();\n    }\n\n    if (!challengeResponses) {\n      return this.rejectAuthError(AuthErrorTypes.EmptyChallengeResponse);\n    }\n\n    var that = this;\n    return new Promise(function (resolve, reject) {\n      user.sendCustomChallengeAnswer(challengeResponses, _this.authCallbacks(user, resolve, reject), clientMetadata);\n    });\n  };\n  /**\n   * Delete an authenticated users' attributes\n   * @param {CognitoUser} - The currently logged in user object\n   * @return {Promise}\n   **/\n\n\n  AuthClass.prototype.deleteUserAttributes = function (user, attributeNames) {\n    var that = this;\n    return new Promise(function (resolve, reject) {\n      that.userSession(user).then(function (session) {\n        user.deleteAttributes(attributeNames, function (err, result) {\n          if (err) {\n            return reject(err);\n          } else {\n            return resolve(result);\n          }\n        });\n      });\n    });\n  };\n  /**\n   * Update an authenticated users' attributes\n   * @param {CognitoUser} - The currently logged in user object\n   * @return {Promise}\n   **/\n\n\n  AuthClass.prototype.updateUserAttributes = function (user, attributes, clientMetadata) {\n    if (clientMetadata === void 0) {\n      clientMetadata = this._config.clientMetadata;\n    }\n\n    var attributeList = [];\n    var that = this;\n    return new Promise(function (resolve, reject) {\n      that.userSession(user).then(function (session) {\n        for (var key in attributes) {\n          if (key !== 'sub' && key.indexOf('_verified') < 0) {\n            var attr = {\n              Name: key,\n              Value: attributes[key]\n            };\n            attributeList.push(attr);\n          }\n        }\n\n        user.updateAttributes(attributeList, function (err, result) {\n          if (err) {\n            return reject(err);\n          } else {\n            return resolve(result);\n          }\n        }, clientMetadata);\n      });\n    });\n  };\n  /**\n   * Return user attributes\n   * @param {Object} user - The CognitoUser object\n   * @return - A promise resolves to user attributes if success\n   */\n\n\n  AuthClass.prototype.userAttributes = function (user) {\n    var _this = this;\n\n    return new Promise(function (resolve, reject) {\n      _this.userSession(user).then(function (session) {\n        user.getUserAttributes(function (err, attributes) {\n          if (err) {\n            reject(err);\n          } else {\n            resolve(attributes);\n          }\n        });\n      });\n    });\n  };\n\n  AuthClass.prototype.verifiedContact = function (user) {\n    var that = this;\n    return this.userAttributes(user).then(function (attributes) {\n      var attrs = that.attributesToObject(attributes);\n      var unverified = {};\n      var verified = {};\n\n      if (attrs['email']) {\n        if (attrs['email_verified']) {\n          verified['email'] = attrs['email'];\n        } else {\n          unverified['email'] = attrs['email'];\n        }\n      }\n\n      if (attrs['phone_number']) {\n        if (attrs['phone_number_verified']) {\n          verified['phone_number'] = attrs['phone_number'];\n        } else {\n          unverified['phone_number'] = attrs['phone_number'];\n        }\n      }\n\n      return {\n        verified: verified,\n        unverified: unverified\n      };\n    });\n  };\n  /**\n   * Get current authenticated user\n   * @return - A promise resolves to current authenticated CognitoUser if success\n   */\n\n\n  AuthClass.prototype.currentUserPoolUser = function (params) {\n    var _this = this;\n\n    if (!this.userPool) {\n      return this.rejectNoUserPool();\n    }\n\n    return new Promise(function (res, rej) {\n      _this._storageSync.then(function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          var user, clientMetadata;\n\n          var _this = this;\n\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                if (!this.isOAuthInProgress()) return [3\n                /*break*/\n                , 2];\n                logger.debug('OAuth signIn in progress, waiting for resolution...');\n                return [4\n                /*yield*/\n                , new Promise(function (res) {\n                  var timeoutId = setTimeout(function () {\n                    logger.debug('OAuth signIn in progress timeout');\n                    Hub.remove('auth', hostedUISignCallback);\n                    res();\n                  }, OAUTH_FLOW_MS_TIMEOUT);\n                  Hub.listen('auth', hostedUISignCallback);\n\n                  function hostedUISignCallback(_a) {\n                    var payload = _a.payload;\n                    var event = payload.event;\n\n                    if (event === 'cognitoHostedUI' || event === 'cognitoHostedUI_failure') {\n                      logger.debug(\"OAuth signIn resolved: \" + event);\n                      clearTimeout(timeoutId);\n                      Hub.remove('auth', hostedUISignCallback);\n                      res();\n                    }\n                  }\n                })];\n\n              case 1:\n                _a.sent();\n\n                _a.label = 2;\n\n              case 2:\n                user = this.userPool.getCurrentUser();\n\n                if (!user) {\n                  logger.debug('Failed to get user from user pool');\n                  rej('No current user');\n                  return [2\n                  /*return*/\n                  ];\n                }\n\n                clientMetadata = this._config.clientMetadata; // refresh the session if the session expired.\n\n                user.getSession(function (err, session) {\n                  return __awaiter(_this, void 0, void 0, function () {\n                    var bypassCache, clientMetadata, _a, scope;\n\n                    var _this = this;\n\n                    return __generator(this, function (_b) {\n                      switch (_b.label) {\n                        case 0:\n                          if (err) {\n                            logger.debug('Failed to get the user session', err);\n                            rej(err);\n                            return [2\n                            /*return*/\n                            ];\n                          }\n\n                          bypassCache = params ? params.bypassCache : false;\n                          if (!bypassCache) return [3\n                          /*break*/\n                          , 2];\n                          return [4\n                          /*yield*/\n                          , this.Credentials.clear()];\n\n                        case 1:\n                          _b.sent();\n\n                          _b.label = 2;\n\n                        case 2:\n                          clientMetadata = this._config.clientMetadata;\n                          _a = session.getAccessToken().decodePayload().scope, scope = _a === void 0 ? '' : _a;\n\n                          if (scope.split(' ').includes(USER_ADMIN_SCOPE)) {\n                            user.getUserData(function (err, data) {\n                              if (err) {\n                                logger.debug('getting user data failed', err); // Make sure the user is still valid\n\n                                if (err.message === 'User is disabled.' || err.message === 'User does not exist.' || err.message === 'Access Token has been revoked' // Session revoked by another app\n                                ) {\n                                  rej(err);\n                                } else {\n                                  // the error may also be thrown when lack of permissions to get user info etc\n                                  // in that case we just bypass the error\n                                  res(user);\n                                }\n\n                                return;\n                              }\n\n                              var preferredMFA = data.PreferredMfaSetting || 'NOMFA';\n                              var attributeList = [];\n\n                              for (var i = 0; i < data.UserAttributes.length; i++) {\n                                var attribute = {\n                                  Name: data.UserAttributes[i].Name,\n                                  Value: data.UserAttributes[i].Value\n                                };\n                                var userAttribute = new CognitoUserAttribute(attribute);\n                                attributeList.push(userAttribute);\n                              }\n\n                              var attributes = _this.attributesToObject(attributeList);\n\n                              Object.assign(user, {\n                                attributes: attributes,\n                                preferredMFA: preferredMFA\n                              });\n                              return res(user);\n                            }, {\n                              bypassCache: bypassCache,\n                              clientMetadata: clientMetadata\n                            });\n                          } else {\n                            logger.debug(\"Unable to get the user data because the \" + USER_ADMIN_SCOPE + \" \" + \"is not in the scopes of the access token\");\n                            return [2\n                            /*return*/\n                            , res(user)];\n                          }\n\n                          return [2\n                          /*return*/\n                          ];\n                      }\n                    });\n                  });\n                }, {\n                  clientMetadata: clientMetadata\n                });\n                return [2\n                /*return*/\n                ];\n            }\n          });\n        });\n      }).catch(function (e) {\n        logger.debug('Failed to sync cache info into memory', e);\n        return rej(e);\n      });\n    });\n  };\n\n  AuthClass.prototype.isOAuthInProgress = function () {\n    return this.oAuthFlowInProgress;\n  };\n  /**\n   * Get current authenticated user\n   * @param {CurrentUserOpts} - options for getting the current user\n   * @return - A promise resolves to current authenticated CognitoUser if success\n   */\n\n\n  AuthClass.prototype.currentAuthenticatedUser = function (params) {\n    return __awaiter(this, void 0, void 0, function () {\n      var federatedUser, e_5, federatedInfo, user, e_6;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            logger.debug('getting current authenticated user');\n            federatedUser = null;\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , this._storageSync];\n\n          case 2:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            e_5 = _a.sent();\n            logger.debug('Failed to sync cache info into memory', e_5);\n            throw e_5;\n\n          case 4:\n            try {\n              federatedInfo = JSON.parse(this._storage.getItem('aws-amplify-federatedInfo'));\n\n              if (federatedInfo) {\n                federatedUser = __assign(__assign({}, federatedInfo.user), {\n                  token: federatedInfo.token\n                });\n              }\n            } catch (e) {\n              logger.debug('cannot load federated user from auth storage');\n            }\n\n            if (!federatedUser) return [3\n            /*break*/\n            , 5];\n            this.user = federatedUser;\n            logger.debug('get current authenticated federated user', this.user);\n            return [2\n            /*return*/\n            , this.user];\n\n          case 5:\n            logger.debug('get current authenticated userpool user');\n            user = null;\n            _a.label = 6;\n\n          case 6:\n            _a.trys.push([6, 8,, 9]);\n\n            return [4\n            /*yield*/\n            , this.currentUserPoolUser(params)];\n\n          case 7:\n            user = _a.sent();\n            return [3\n            /*break*/\n            , 9];\n\n          case 8:\n            e_6 = _a.sent();\n\n            if (e_6 === 'No userPool') {\n              logger.error('Cannot get the current user because the user pool is missing. ' + 'Please make sure the Auth module is configured with a valid Cognito User Pool ID');\n            }\n\n            logger.debug('The user is not authenticated by the error', e_6);\n            return [2\n            /*return*/\n            , Promise.reject('The user is not authenticated')];\n\n          case 9:\n            this.user = user;\n            return [2\n            /*return*/\n            , this.user];\n        }\n      });\n    });\n  };\n  /**\n   * Get current user's session\n   * @return - A promise resolves to session object if success\n   */\n\n\n  AuthClass.prototype.currentSession = function () {\n    var that = this;\n    logger.debug('Getting current session'); // Purposely not calling the reject method here because we don't need a console error\n\n    if (!this.userPool) {\n      return Promise.reject();\n    }\n\n    return new Promise(function (res, rej) {\n      that.currentUserPoolUser().then(function (user) {\n        that.userSession(user).then(function (session) {\n          res(session);\n          return;\n        }).catch(function (e) {\n          logger.debug('Failed to get the current session', e);\n          rej(e);\n          return;\n        });\n      }).catch(function (e) {\n        logger.debug('Failed to get the current user', e);\n        rej(e);\n        return;\n      });\n    });\n  };\n  /**\n   * Get the corresponding user session\n   * @param {Object} user - The CognitoUser object\n   * @return - A promise resolves to the session\n   */\n\n\n  AuthClass.prototype.userSession = function (user) {\n    if (!user) {\n      logger.debug('the user is null');\n      return this.rejectAuthError(AuthErrorTypes.NoUserSession);\n    }\n\n    var clientMetadata = this._config.clientMetadata; // TODO: verify behavior if this is override during signIn\n\n    return new Promise(function (resolve, reject) {\n      logger.debug('Getting the session from this user:', user);\n      user.getSession(function (err, session) {\n        if (err) {\n          logger.debug('Failed to get the session from user', user);\n          reject(err);\n          return;\n        } else {\n          logger.debug('Succeed to get the user session', session);\n          resolve(session);\n          return;\n        }\n      }, {\n        clientMetadata: clientMetadata\n      });\n    });\n  };\n  /**\n   * Get authenticated credentials of current user.\n   * @return - A promise resolves to be current user's credentials\n   */\n\n\n  AuthClass.prototype.currentUserCredentials = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var e_7, federatedInfo;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            logger.debug('Getting current user credentials');\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , this._storageSync];\n\n          case 2:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            e_7 = _a.sent();\n            logger.debug('Failed to sync cache info into memory', e_7);\n            throw e_7;\n\n          case 4:\n            federatedInfo = null;\n\n            try {\n              federatedInfo = JSON.parse(this._storage.getItem('aws-amplify-federatedInfo'));\n            } catch (e) {\n              logger.debug('failed to get or parse item aws-amplify-federatedInfo', e);\n            }\n\n            if (federatedInfo) {\n              // refresh the jwt token here if necessary\n              return [2\n              /*return*/\n              , this.Credentials.refreshFederatedToken(federatedInfo)];\n            } else {\n              return [2\n              /*return*/\n              , this.currentSession().then(function (session) {\n                logger.debug('getting session success', session);\n                return _this.Credentials.set(session, 'session');\n              }).catch(function (error) {\n                logger.debug('getting session failed', error);\n                return _this.Credentials.set(null, 'guest');\n              })];\n            }\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AuthClass.prototype.currentCredentials = function () {\n    logger.debug('getting current credentials');\n    return this.Credentials.get();\n  };\n  /**\n   * Initiate an attribute confirmation request\n   * @param {Object} user - The CognitoUser\n   * @param {Object} attr - The attributes to be verified\n   * @return - A promise resolves to callback data if success\n   */\n\n\n  AuthClass.prototype.verifyUserAttribute = function (user, attr, clientMetadata) {\n    if (clientMetadata === void 0) {\n      clientMetadata = this._config.clientMetadata;\n    }\n\n    return new Promise(function (resolve, reject) {\n      user.getAttributeVerificationCode(attr, {\n        onSuccess: function (success) {\n          return resolve(success);\n        },\n        onFailure: function (err) {\n          return reject(err);\n        }\n      }, clientMetadata);\n    });\n  };\n  /**\n   * Confirm an attribute using a confirmation code\n   * @param {Object} user - The CognitoUser\n   * @param {Object} attr - The attribute to be verified\n   * @param {String} code - The confirmation code\n   * @return - A promise resolves to callback data if success\n   */\n\n\n  AuthClass.prototype.verifyUserAttributeSubmit = function (user, attr, code) {\n    if (!code) {\n      return this.rejectAuthError(AuthErrorTypes.EmptyCode);\n    }\n\n    return new Promise(function (resolve, reject) {\n      user.verifyAttribute(attr, code, {\n        onSuccess: function (data) {\n          resolve(data);\n          return;\n        },\n        onFailure: function (err) {\n          reject(err);\n          return;\n        }\n      });\n    });\n  };\n\n  AuthClass.prototype.verifyCurrentUserAttribute = function (attr) {\n    var that = this;\n    return that.currentUserPoolUser().then(function (user) {\n      return that.verifyUserAttribute(user, attr);\n    });\n  };\n  /**\n   * Confirm current user's attribute using a confirmation code\n   * @param {Object} attr - The attribute to be verified\n   * @param {String} code - The confirmation code\n   * @return - A promise resolves to callback data if success\n   */\n\n\n  AuthClass.prototype.verifyCurrentUserAttributeSubmit = function (attr, code) {\n    var that = this;\n    return that.currentUserPoolUser().then(function (user) {\n      return that.verifyUserAttributeSubmit(user, attr, code);\n    });\n  };\n\n  AuthClass.prototype.cognitoIdentitySignOut = function (opts, user) {\n    return __awaiter(this, void 0, void 0, function () {\n      var e_8, isSignedInHostedUI;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n\n            return [4\n            /*yield*/\n            , this._storageSync];\n\n          case 1:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 3];\n\n          case 2:\n            e_8 = _a.sent();\n            logger.debug('Failed to sync cache info into memory', e_8);\n            throw e_8;\n\n          case 3:\n            isSignedInHostedUI = this._oAuthHandler && this._storage.getItem('amplify-signin-with-hostedUI') === 'true';\n            return [2\n            /*return*/\n            , new Promise(function (res, rej) {\n              if (opts && opts.global) {\n                logger.debug('user global sign out', user); // in order to use global signout\n                // we must validate the user as an authenticated user by using getSession\n\n                var clientMetadata = _this._config.clientMetadata; // TODO: verify behavior if this is override during signIn\n\n                user.getSession(function (err, result) {\n                  if (err) {\n                    logger.debug('failed to get the user session', err);\n                    return rej(err);\n                  }\n\n                  user.globalSignOut({\n                    onSuccess: function (data) {\n                      logger.debug('global sign out success');\n\n                      if (isSignedInHostedUI) {\n                        _this.oAuthSignOutRedirect(res, rej);\n                      } else {\n                        return res();\n                      }\n                    },\n                    onFailure: function (err) {\n                      logger.debug('global sign out failed', err);\n                      return rej(err);\n                    }\n                  });\n                }, {\n                  clientMetadata: clientMetadata\n                });\n              } else {\n                logger.debug('user sign out', user);\n                user.signOut(function () {\n                  if (isSignedInHostedUI) {\n                    _this.oAuthSignOutRedirect(res, rej);\n                  } else {\n                    return res();\n                  }\n                });\n              }\n            })];\n        }\n      });\n    });\n  };\n\n  AuthClass.prototype.oAuthSignOutRedirect = function (resolve, reject) {\n    var isBrowser = JS.browserOrNode().isBrowser;\n\n    if (isBrowser) {\n      this.oAuthSignOutRedirectOrReject(reject);\n    } else {\n      this.oAuthSignOutAndResolve(resolve);\n    }\n  };\n\n  AuthClass.prototype.oAuthSignOutAndResolve = function (resolve) {\n    this._oAuthHandler.signOut();\n\n    resolve();\n  };\n\n  AuthClass.prototype.oAuthSignOutRedirectOrReject = function (reject) {\n    this._oAuthHandler.signOut(); // this method redirects url\n    // App should be redirected to another url otherwise it will reject\n\n\n    setTimeout(function () {\n      return reject('Signout timeout fail');\n    }, 3000);\n  };\n  /**\n   * Sign out method\n   * @\n   * @return - A promise resolved if success\n   */\n\n\n  AuthClass.prototype.signOut = function (opts) {\n    return __awaiter(this, void 0, void 0, function () {\n      var e_9, user;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n\n            return [4\n            /*yield*/\n            , this.cleanCachedItems()];\n\n          case 1:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 3];\n\n          case 2:\n            e_9 = _a.sent();\n            logger.debug('failed to clear cached items');\n            return [3\n            /*break*/\n            , 3];\n\n          case 3:\n            if (!this.userPool) return [3\n            /*break*/\n            , 7];\n            user = this.userPool.getCurrentUser();\n            if (!user) return [3\n            /*break*/\n            , 5];\n            return [4\n            /*yield*/\n            , this.cognitoIdentitySignOut(opts, user)];\n\n          case 4:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 6];\n\n          case 5:\n            logger.debug('no current Cognito user');\n            _a.label = 6;\n\n          case 6:\n            return [3\n            /*break*/\n            , 8];\n\n          case 7:\n            logger.debug('no Congito User pool');\n            _a.label = 8;\n\n          case 8:\n            /**\n             * Note for future refactor - no reliable way to get username with\n             * Cognito User Pools vs Identity when federating with Social Providers\n             * This is why we need a well structured session object that can be inspected\n             * and information passed back in the message below for Hub dispatch\n             */\n            dispatchAuthEvent('signOut', this.user, \"A user has been signed out\");\n            this.user = null;\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AuthClass.prototype.cleanCachedItems = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            // clear cognito cached item\n            return [4\n            /*yield*/\n            , this.Credentials.clear()];\n\n          case 1:\n            // clear cognito cached item\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * Change a password for an authenticated user\n   * @param {Object} user - The CognitoUser object\n   * @param {String} oldPassword - the current password\n   * @param {String} newPassword - the requested new password\n   * @return - A promise resolves if success\n   */\n\n\n  AuthClass.prototype.changePassword = function (user, oldPassword, newPassword, clientMetadata) {\n    var _this = this;\n\n    if (clientMetadata === void 0) {\n      clientMetadata = this._config.clientMetadata;\n    }\n\n    return new Promise(function (resolve, reject) {\n      _this.userSession(user).then(function (session) {\n        user.changePassword(oldPassword, newPassword, function (err, data) {\n          if (err) {\n            logger.debug('change password failure', err);\n            return reject(err);\n          } else {\n            return resolve(data);\n          }\n        }, clientMetadata);\n      });\n    });\n  };\n  /**\n   * Initiate a forgot password request\n   * @param {String} username - the username to change password\n   * @return - A promise resolves if success\n   */\n\n\n  AuthClass.prototype.forgotPassword = function (username, clientMetadata) {\n    if (clientMetadata === void 0) {\n      clientMetadata = this._config.clientMetadata;\n    }\n\n    if (!this.userPool) {\n      return this.rejectNoUserPool();\n    }\n\n    if (!username) {\n      return this.rejectAuthError(AuthErrorTypes.EmptyUsername);\n    }\n\n    var user = this.createCognitoUser(username);\n    return new Promise(function (resolve, reject) {\n      user.forgotPassword({\n        onSuccess: function () {\n          resolve();\n          return;\n        },\n        onFailure: function (err) {\n          logger.debug('forgot password failure', err);\n          dispatchAuthEvent('forgotPassword_failure', err, username + \" forgotPassword failed\");\n          reject(err);\n          return;\n        },\n        inputVerificationCode: function (data) {\n          dispatchAuthEvent('forgotPassword', user, username + \" has initiated forgot password flow\");\n          resolve(data);\n          return;\n        }\n      }, clientMetadata);\n    });\n  };\n  /**\n   * Confirm a new password using a confirmation Code\n   * @param {String} username - The username\n   * @param {String} code - The confirmation code\n   * @param {String} password - The new password\n   * @return - A promise that resolves if success\n   */\n\n\n  AuthClass.prototype.forgotPasswordSubmit = function (username, code, password, clientMetadata) {\n    if (clientMetadata === void 0) {\n      clientMetadata = this._config.clientMetadata;\n    }\n\n    if (!this.userPool) {\n      return this.rejectNoUserPool();\n    }\n\n    if (!username) {\n      return this.rejectAuthError(AuthErrorTypes.EmptyUsername);\n    }\n\n    if (!code) {\n      return this.rejectAuthError(AuthErrorTypes.EmptyCode);\n    }\n\n    if (!password) {\n      return this.rejectAuthError(AuthErrorTypes.EmptyPassword);\n    }\n\n    var user = this.createCognitoUser(username);\n    return new Promise(function (resolve, reject) {\n      user.confirmPassword(code, password, {\n        onSuccess: function (success) {\n          dispatchAuthEvent('forgotPasswordSubmit', user, username + \" forgotPasswordSubmit successful\");\n          resolve(success);\n          return;\n        },\n        onFailure: function (err) {\n          dispatchAuthEvent('forgotPasswordSubmit_failure', err, username + \" forgotPasswordSubmit failed\");\n          reject(err);\n          return;\n        }\n      }, clientMetadata);\n    });\n  };\n  /**\n   * Get user information\n   * @async\n   * @return {Object }- current User's information\n   */\n\n\n  AuthClass.prototype.currentUserInfo = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var source, user, attributes, userAttrs, credentials, e_10, info, err_1, user;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            source = this.Credentials.getCredSource();\n            if (!(!source || source === 'aws' || source === 'userPool')) return [3\n            /*break*/\n            , 9];\n            return [4\n            /*yield*/\n            , this.currentUserPoolUser().catch(function (err) {\n              return logger.error(err);\n            })];\n\n          case 1:\n            user = _a.sent();\n\n            if (!user) {\n              return [2\n              /*return*/\n              , null];\n            }\n\n            _a.label = 2;\n\n          case 2:\n            _a.trys.push([2, 8,, 9]);\n\n            return [4\n            /*yield*/\n            , this.userAttributes(user)];\n\n          case 3:\n            attributes = _a.sent();\n            userAttrs = this.attributesToObject(attributes);\n            credentials = null;\n            _a.label = 4;\n\n          case 4:\n            _a.trys.push([4, 6,, 7]);\n\n            return [4\n            /*yield*/\n            , this.currentCredentials()];\n\n          case 5:\n            credentials = _a.sent();\n            return [3\n            /*break*/\n            , 7];\n\n          case 6:\n            e_10 = _a.sent();\n            logger.debug('Failed to retrieve credentials while getting current user info', e_10);\n            return [3\n            /*break*/\n            , 7];\n\n          case 7:\n            info = {\n              id: credentials ? credentials.identityId : undefined,\n              username: user.getUsername(),\n              attributes: userAttrs\n            };\n            return [2\n            /*return*/\n            , info];\n\n          case 8:\n            err_1 = _a.sent();\n            logger.error('currentUserInfo error', err_1);\n            return [2\n            /*return*/\n            , {}];\n\n          case 9:\n            if (source === 'federated') {\n              user = this.user;\n              return [2\n              /*return*/\n              , user ? user : {}];\n            }\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AuthClass.prototype.federatedSignIn = function (providerOrOptions, response, user) {\n    return __awaiter(this, void 0, void 0, function () {\n      var options, provider, customState, client_id, redirect_uri, provider, loggedInUser, token, identity_id, expires_at, credentials, currentUser;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!this._config.identityPoolId && !this._config.userPoolId) {\n              throw new Error(\"Federation requires either a User Pool or Identity Pool in config\");\n            } // Ensure backwards compatability\n\n\n            if (typeof providerOrOptions === 'undefined') {\n              if (this._config.identityPoolId && !this._config.userPoolId) {\n                throw new Error(\"Federation with Identity Pools requires tokens passed as arguments\");\n              }\n            }\n\n            if (!(isFederatedSignInOptions(providerOrOptions) || isFederatedSignInOptionsCustom(providerOrOptions) || hasCustomState(providerOrOptions) || typeof providerOrOptions === 'undefined')) return [3\n            /*break*/\n            , 1];\n            options = providerOrOptions || {\n              provider: CognitoHostedUIIdentityProvider.Cognito\n            };\n            provider = isFederatedSignInOptions(options) ? options.provider : options.customProvider;\n            customState = isFederatedSignInOptions(options) ? options.customState : options.customState;\n\n            if (this._config.userPoolId) {\n              client_id = isCognitoHostedOpts(this._config.oauth) ? this._config.userPoolWebClientId : this._config.oauth.clientID;\n              redirect_uri = isCognitoHostedOpts(this._config.oauth) ? this._config.oauth.redirectSignIn : this._config.oauth.redirectUri;\n\n              this._oAuthHandler.oauthSignIn(this._config.oauth.responseType, this._config.oauth.domain, redirect_uri, client_id, provider, customState);\n            }\n\n            return [3\n            /*break*/\n            , 4];\n\n          case 1:\n            provider = providerOrOptions; // To check if the user is already logged in\n\n            try {\n              loggedInUser = JSON.stringify(JSON.parse(this._storage.getItem('aws-amplify-federatedInfo')).user);\n\n              if (loggedInUser) {\n                logger.warn(\"There is already a signed in user: \" + loggedInUser + \" in your app.\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tYou should not call Auth.federatedSignIn method again as it may cause unexpected behavior.\");\n              }\n            } catch (e) {}\n\n            token = response.token, identity_id = response.identity_id, expires_at = response.expires_at;\n            return [4\n            /*yield*/\n            , this.Credentials.set({\n              provider: provider,\n              token: token,\n              identity_id: identity_id,\n              user: user,\n              expires_at: expires_at\n            }, 'federation')];\n\n          case 2:\n            credentials = _a.sent();\n            return [4\n            /*yield*/\n            , this.currentAuthenticatedUser()];\n\n          case 3:\n            currentUser = _a.sent();\n            dispatchAuthEvent('signIn', currentUser, \"A user \" + currentUser.username + \" has been signed in\");\n            logger.debug('federated sign in credentials', credentials);\n            return [2\n            /*return*/\n            , credentials];\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * Used to complete the OAuth flow with or without the Cognito Hosted UI\n   * @param {String} URL - optional parameter for customers to pass in the response URL\n   */\n\n\n  AuthClass.prototype._handleAuthResponse = function (URL) {\n    return __awaiter(this, void 0, void 0, function () {\n      var currentUrl, hasCodeOrError, hasTokenOrError, _a, accessToken, idToken, refreshToken, state, session, credentials, isCustomStateIncluded, currentUser, customState, err_2;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            if (this.oAuthFlowInProgress) {\n              logger.debug(\"Skipping URL \" + URL + \" current flow in progress\");\n              return [2\n              /*return*/\n              ];\n            }\n\n            _b.label = 1;\n\n          case 1:\n            _b.trys.push([1,, 8, 9]);\n\n            this.oAuthFlowInProgress = true;\n\n            if (!this._config.userPoolId) {\n              throw new Error(\"OAuth responses require a User Pool defined in config\");\n            }\n\n            dispatchAuthEvent('parsingCallbackUrl', {\n              url: URL\n            }, \"The callback url is being parsed\");\n            currentUrl = URL || (JS.browserOrNode().isBrowser ? window.location.href : '');\n            hasCodeOrError = !!(parse(currentUrl).query || '').split('&').map(function (entry) {\n              return entry.split('=');\n            }).find(function (_a) {\n              var _b = __read(_a, 1),\n                  k = _b[0];\n\n              return k === 'code' || k === 'error';\n            });\n            hasTokenOrError = !!(parse(currentUrl).hash || '#').substr(1).split('&').map(function (entry) {\n              return entry.split('=');\n            }).find(function (_a) {\n              var _b = __read(_a, 1),\n                  k = _b[0];\n\n              return k === 'access_token' || k === 'error';\n            });\n            if (!(hasCodeOrError || hasTokenOrError)) return [3\n            /*break*/\n            , 7];\n\n            this._storage.setItem('amplify-redirected-from-hosted-ui', 'true');\n\n            _b.label = 2;\n\n          case 2:\n            _b.trys.push([2, 6,, 7]);\n\n            return [4\n            /*yield*/\n            , this._oAuthHandler.handleAuthResponse(currentUrl)];\n\n          case 3:\n            _a = _b.sent(), accessToken = _a.accessToken, idToken = _a.idToken, refreshToken = _a.refreshToken, state = _a.state;\n            session = new CognitoUserSession({\n              IdToken: new CognitoIdToken({\n                IdToken: idToken\n              }),\n              RefreshToken: new CognitoRefreshToken({\n                RefreshToken: refreshToken\n              }),\n              AccessToken: new CognitoAccessToken({\n                AccessToken: accessToken\n              })\n            });\n            credentials = void 0;\n            if (!this._config.identityPoolId) return [3\n            /*break*/\n            , 5];\n            return [4\n            /*yield*/\n            , this.Credentials.set(session, 'session')];\n\n          case 4:\n            credentials = _b.sent();\n            logger.debug('AWS credentials', credentials);\n            _b.label = 5;\n\n          case 5:\n            isCustomStateIncluded = /-/.test(state);\n            currentUser = this.createCognitoUser(session.getIdToken().decodePayload()['cognito:username']); // This calls cacheTokens() in Cognito SDK\n\n            currentUser.setSignInUserSession(session);\n\n            if (window && typeof window.history !== 'undefined') {\n              window.history.replaceState({}, null, this._config.oauth.redirectSignIn);\n            }\n\n            dispatchAuthEvent('signIn', currentUser, \"A user \" + currentUser.getUsername() + \" has been signed in\");\n            dispatchAuthEvent('cognitoHostedUI', currentUser, \"A user \" + currentUser.getUsername() + \" has been signed in via Cognito Hosted UI\");\n\n            if (isCustomStateIncluded) {\n              customState = state.split('-').splice(1).join('-');\n              dispatchAuthEvent('customOAuthState', urlSafeDecode(customState), \"State for user \" + currentUser.getUsername());\n            } //#endregion\n\n\n            return [2\n            /*return*/\n            , credentials];\n\n          case 6:\n            err_2 = _b.sent();\n            logger.debug('Error in cognito hosted auth response', err_2); // Just like a successful handling of `?code`, replace the window history to \"dispose\" of the `code`.\n            // Otherwise, reloading the page will throw errors as the `code` has already been spent.\n\n            if (window && typeof window.history !== 'undefined') {\n              window.history.replaceState({}, null, this._config.oauth.redirectSignIn);\n            }\n\n            dispatchAuthEvent('signIn_failure', err_2, \"The OAuth response flow failed\");\n            dispatchAuthEvent('cognitoHostedUI_failure', err_2, \"A failure occurred when returning to the Cognito Hosted UI\");\n            dispatchAuthEvent('customState_failure', err_2, \"A failure occurred when returning state\");\n            return [3\n            /*break*/\n            , 7];\n\n          case 7:\n            return [3\n            /*break*/\n            , 9];\n\n          case 8:\n            this.oAuthFlowInProgress = false;\n            return [7\n            /*endfinally*/\n            ];\n\n          case 9:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * Compact version of credentials\n   * @param {Object} credentials\n   * @return {Object} - Credentials\n   */\n\n\n  AuthClass.prototype.essentialCredentials = function (credentials) {\n    return {\n      accessKeyId: credentials.accessKeyId,\n      sessionToken: credentials.sessionToken,\n      secretAccessKey: credentials.secretAccessKey,\n      identityId: credentials.identityId,\n      authenticated: credentials.authenticated\n    };\n  };\n\n  AuthClass.prototype.attributesToObject = function (attributes) {\n    var _this = this;\n\n    var obj = {};\n\n    if (attributes) {\n      attributes.map(function (attribute) {\n        if (attribute.Name === 'email_verified' || attribute.Name === 'phone_number_verified') {\n          obj[attribute.Name] = _this.isTruthyString(attribute.Value) || attribute.Value === true;\n        } else {\n          obj[attribute.Name] = attribute.Value;\n        }\n      });\n    }\n\n    return obj;\n  };\n\n  AuthClass.prototype.isTruthyString = function (value) {\n    return typeof value.toLowerCase === 'function' && value.toLowerCase() === 'true';\n  };\n\n  AuthClass.prototype.createCognitoUser = function (username) {\n    var userData = {\n      Username: username,\n      Pool: this.userPool\n    };\n    userData.Storage = this._storage;\n    var authenticationFlowType = this._config.authenticationFlowType;\n    var user = new CognitoUser(userData);\n\n    if (authenticationFlowType) {\n      user.setAuthenticationFlowType(authenticationFlowType);\n    }\n\n    return user;\n  };\n\n  AuthClass.prototype._isValidAuthStorage = function (obj) {\n    // We need to check if the obj has the functions of Storage\n    return !!obj && typeof obj.getItem === 'function' && typeof obj.setItem === 'function' && typeof obj.removeItem === 'function' && typeof obj.clear === 'function';\n  };\n\n  AuthClass.prototype.noUserPoolErrorHandler = function (config) {\n    if (config) {\n      if (!config.userPoolId || !config.identityPoolId) {\n        return AuthErrorTypes.MissingAuthConfig;\n      }\n    }\n\n    return AuthErrorTypes.NoConfig;\n  };\n\n  AuthClass.prototype.rejectAuthError = function (type) {\n    return Promise.reject(new AuthError(type));\n  };\n\n  AuthClass.prototype.rejectNoUserPool = function () {\n    var type = this.noUserPoolErrorHandler(this._config);\n    return Promise.reject(new NoUserPoolError(type));\n  };\n\n  AuthClass.prototype.rememberDevice = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var currUser, error_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n\n            return [4\n            /*yield*/\n            , this.currentUserPoolUser()];\n\n          case 1:\n            currUser = _a.sent();\n            return [3\n            /*break*/\n            , 3];\n\n          case 2:\n            error_1 = _a.sent();\n            logger.debug('The user is not authenticated by the error', error_1);\n            return [2\n            /*return*/\n            , Promise.reject('The user is not authenticated')];\n\n          case 3:\n            currUser.getCachedDeviceKeyAndPassword();\n            return [2\n            /*return*/\n            , new Promise(function (res, rej) {\n              currUser.setDeviceStatusRemembered({\n                onSuccess: function (data) {\n                  res(data);\n                },\n                onFailure: function (err) {\n                  if (err.code === 'InvalidParameterException') {\n                    rej(new AuthError(AuthErrorTypes.DeviceConfig));\n                  } else if (err.code === 'NetworkError') {\n                    rej(new AuthError(AuthErrorTypes.NetworkError));\n                  } else {\n                    rej(err);\n                  }\n                }\n              });\n            })];\n        }\n      });\n    });\n  };\n\n  AuthClass.prototype.forgetDevice = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var currUser, error_2;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n\n            return [4\n            /*yield*/\n            , this.currentUserPoolUser()];\n\n          case 1:\n            currUser = _a.sent();\n            return [3\n            /*break*/\n            , 3];\n\n          case 2:\n            error_2 = _a.sent();\n            logger.debug('The user is not authenticated by the error', error_2);\n            return [2\n            /*return*/\n            , Promise.reject('The user is not authenticated')];\n\n          case 3:\n            currUser.getCachedDeviceKeyAndPassword();\n            return [2\n            /*return*/\n            , new Promise(function (res, rej) {\n              currUser.forgetDevice({\n                onSuccess: function (data) {\n                  res(data);\n                },\n                onFailure: function (err) {\n                  if (err.code === 'InvalidParameterException') {\n                    rej(new AuthError(AuthErrorTypes.DeviceConfig));\n                  } else if (err.code === 'NetworkError') {\n                    rej(new AuthError(AuthErrorTypes.NetworkError));\n                  } else {\n                    rej(err);\n                  }\n                }\n              });\n            })];\n        }\n      });\n    });\n  };\n\n  AuthClass.prototype.fetchDevices = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var currUser, error_3;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n\n            return [4\n            /*yield*/\n            , this.currentUserPoolUser()];\n\n          case 1:\n            currUser = _a.sent();\n            return [3\n            /*break*/\n            , 3];\n\n          case 2:\n            error_3 = _a.sent();\n            logger.debug('The user is not authenticated by the error', error_3);\n            throw new Error('The user is not authenticated');\n\n          case 3:\n            currUser.getCachedDeviceKeyAndPassword();\n            return [2\n            /*return*/\n            , new Promise(function (res, rej) {\n              var cb = {\n                onSuccess: function (data) {\n                  var deviceList = data.Devices.map(function (device) {\n                    var deviceName = device.DeviceAttributes.find(function (_a) {\n                      var Name = _a.Name;\n                      return Name === 'device_name';\n                    }) || {};\n                    var deviceInfo = {\n                      id: device.DeviceKey,\n                      name: deviceName.Value\n                    };\n                    return deviceInfo;\n                  });\n                  res(deviceList);\n                },\n                onFailure: function (err) {\n                  if (err.code === 'InvalidParameterException') {\n                    rej(new AuthError(AuthErrorTypes.DeviceConfig));\n                  } else if (err.code === 'NetworkError') {\n                    rej(new AuthError(AuthErrorTypes.NetworkError));\n                  } else {\n                    rej(err);\n                  }\n                }\n              };\n              currUser.listDevices(MAX_DEVICES, null, cb);\n            })];\n        }\n      });\n    });\n  };\n\n  return AuthClass;\n}();\n\nexport { AuthClass };\nexport var Auth = new AuthClass(null);\nAmplify.register(Auth);","map":{"version":3,"sources":["D:/taller/node_modules/@aws-amplify/auth/lib-esm/Auth.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","__generator","body","_","label","sent","trys","ops","f","y","g","verb","Symbol","iterator","v","op","TypeError","pop","push","__read","o","m","r","ar","error","isUsernamePasswordOpts","isCognitoHostedOpts","isFederatedSignInOptions","isFederatedSignInOptionsCustom","hasCustomState","Amplify","ConsoleLogger","Logger","Credentials","Hub","StorageHelper","Parser","JS","UniversalStorage","urlSafeDecode","CookieStorage","CognitoUserPool","AuthenticationDetails","CognitoUser","CognitoUserSession","CognitoUserAttribute","CognitoIdToken","CognitoRefreshToken","CognitoAccessToken","parse","OAuth","default","urlListener","AuthError","NoUserPoolError","AuthErrorTypes","CognitoHostedUIIdentityProvider","logger","USER_ADMIN_SCOPE","OAUTH_FLOW_MS_TIMEOUT","AMPLIFY_SYMBOL","for","dispatchAuthEvent","event","data","message","dispatch","MAX_DEVICES","AuthClass","config","_this","userPool","user","oAuthFlowInProgress","wrapRefreshSessionCallback","callback","wrapped","undefined","configure","currentCredentials","bind","currentUserCredentials","listen","_a","payload","_storage","setItem","removeItem","getModuleName","_config","debug","conf","parseMobilehubConfig","Auth","userPoolId","userPoolWebClientId","cookieStorage","oauth","region","identityPoolId","mandatorySignIn","refreshHandlers","identityPoolRegion","clientMetadata","endpoint","storage","ssr","getStorage","_isValidAuthStorage","Error","_storageSync","userPoolData","UserPoolId","ClientId","Storage","cognitoHostedUIConfig","awsCognito","cognitoAuthParams","cognitoClientId","domain","scopes","redirectSignIn","redirectSignOut","responseType","urlOpener","_oAuthHandler","usedResponseUrls_1","url","_handleAuthResponse","signUp","params","restOfAttrs","_i","rejectNoUserPool","username","password","attributes","validationData","email","phone_number","Name","Value","attrs_1","keys","map","key","validationDataObject_1","rejectAuthError","SignUpError","EmptyUsername","EmptyPassword","err","confirmSignUp","code","options","EmptyCode","createCognitoUser","forceAliasCreation","confirmRegistration","resendSignUp","resendConfirmationCode","signIn","usernameOrSignInOpts","pw","warn","InvalidUsername","authDetails","Username","Password","ValidationData","ClientMetadata","signInWithPassword","signInWithoutPassword","authCallbacks","that","onSuccess","session","cred","e_1","currentUser","e_2","clear","set","currentUserPoolUser","getUsername","onFailure","customChallenge","challengeParam","mfaRequired","challengeName","mfaSetup","newPasswordRequired","userAttributes","requiredAttributes","totpRequired","selectMFAType","pendingSignIn","authenticateUser","setAuthenticationFlowType","initiateAuth","getMFAOptions","res","rej","mfaOptions","getPreferredMFA","bypassCache","getUserData","mfaType","_getMfaTypeFromUserData","ret","preferredMFA","PreferredMfaSetting","mfaList","UserMFASettingList","MFAOptions","_getUserData","setPreferredMFA","mfaMethod","userData","smsMfaSettings","totpMfaSettings","currentMFAType","_b","PreferredMfa","Enabled","InvalidMFA","forEach","NoMFA","setUserMfaPreference","disableSMS","disableMFA","enableSMS","enableMFA","setupTOTP","associateSoftwareToken","associateSecretCode","secretCode","verifyTotpToken","challengeAnswer","verifySoftwareToken","confirmSignIn","sendMFACode","e_3","completeNewPassword","completeNewPasswordChallenge","e_4","sendCustomChallengeAnswer","challengeResponses","EmptyChallengeResponse","deleteUserAttributes","attributeNames","userSession","deleteAttributes","updateUserAttributes","attributeList","indexOf","attr","updateAttributes","getUserAttributes","verifiedContact","attrs","attributesToObject","unverified","verified","isOAuthInProgress","timeoutId","setTimeout","remove","hostedUISignCallback","clearTimeout","getCurrentUser","getSession","scope","getAccessToken","decodePayload","split","includes","UserAttributes","attribute","userAttribute","catch","currentAuthenticatedUser","federatedUser","e_5","federatedInfo","e_6","JSON","getItem","token","currentSession","NoUserSession","e_7","refreshFederatedToken","get","verifyUserAttribute","getAttributeVerificationCode","success","verifyUserAttributeSubmit","verifyAttribute","verifyCurrentUserAttribute","verifyCurrentUserAttributeSubmit","cognitoIdentitySignOut","opts","e_8","isSignedInHostedUI","global","globalSignOut","oAuthSignOutRedirect","signOut","isBrowser","browserOrNode","oAuthSignOutRedirectOrReject","oAuthSignOutAndResolve","e_9","cleanCachedItems","changePassword","oldPassword","newPassword","forgotPassword","inputVerificationCode","forgotPasswordSubmit","confirmPassword","currentUserInfo","source","userAttrs","credentials","e_10","info","err_1","getCredSource","id","identityId","federatedSignIn","providerOrOptions","response","provider","customState","client_id","redirect_uri","loggedInUser","identity_id","expires_at","Cognito","customProvider","clientID","redirectUri","oauthSignIn","stringify","URL","currentUrl","hasCodeOrError","hasTokenOrError","accessToken","idToken","refreshToken","state","isCustomStateIncluded","err_2","window","location","href","query","entry","find","k","hash","substr","handleAuthResponse","IdToken","RefreshToken","AccessToken","test","getIdToken","setSignInUserSession","history","replaceState","splice","join","essentialCredentials","accessKeyId","sessionToken","secretAccessKey","authenticated","obj","isTruthyString","toLowerCase","Pool","authenticationFlowType","noUserPoolErrorHandler","MissingAuthConfig","NoConfig","type","rememberDevice","currUser","error_1","getCachedDeviceKeyAndPassword","setDeviceStatusRemembered","DeviceConfig","NetworkError","forgetDevice","error_2","fetchDevices","error_3","cb","deviceList","Devices","device","deviceName","DeviceAttributes","deviceInfo","DeviceKey","name","listDevices","register"],"mappings":"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","sourcesContent":["/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *\t http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nimport { isUsernamePasswordOpts, isCognitoHostedOpts, isFederatedSignInOptions, isFederatedSignInOptionsCustom, hasCustomState, } from './types';\nimport { Amplify, ConsoleLogger as Logger, Credentials, Hub, StorageHelper, Parser, JS, UniversalStorage, urlSafeDecode, } from '@aws-amplify/core';\nimport { CookieStorage, CognitoUserPool, AuthenticationDetails, CognitoUser, CognitoUserSession, CognitoUserAttribute, CognitoIdToken, CognitoRefreshToken, CognitoAccessToken, } from 'amazon-cognito-identity-js';\nimport { parse } from 'url';\nimport OAuth from './OAuth/OAuth';\nimport { default as urlListener } from './urlListener';\nimport { AuthError, NoUserPoolError } from './Errors';\nimport { AuthErrorTypes, CognitoHostedUIIdentityProvider, } from './types/Auth';\nvar logger = new Logger('AuthClass');\nvar USER_ADMIN_SCOPE = 'aws.cognito.signin.user.admin';\n// 10 sec, following this guide https://www.nngroup.com/articles/response-times-3-important-limits/\nvar OAUTH_FLOW_MS_TIMEOUT = 10 * 1000;\nvar AMPLIFY_SYMBOL = (typeof Symbol !== 'undefined' &&\n    typeof Symbol.for === 'function'\n    ? Symbol.for('amplify_default')\n    : '@@amplify_default');\nvar dispatchAuthEvent = function (event, data, message) {\n    Hub.dispatch('auth', { event: event, data: data, message: message }, 'Auth', AMPLIFY_SYMBOL);\n};\n// Cognito Documentation for max device\n// tslint:disable-next-line:max-line-length\n// https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_ListDevices.html#API_ListDevices_RequestSyntax\nvar MAX_DEVICES = 60;\n/**\n * Provide authentication steps\n */\nvar AuthClass = /** @class */ (function () {\n    /**\n     * Initialize Auth with AWS configurations\n     * @param {Object} config - Configuration of the Auth\n     */\n    function AuthClass(config) {\n        var _this = this;\n        this.userPool = null;\n        this.user = null;\n        this.oAuthFlowInProgress = false;\n        this.Credentials = Credentials;\n        this.wrapRefreshSessionCallback = function (callback) {\n            var wrapped = function (error, data) {\n                if (data) {\n                    dispatchAuthEvent('tokenRefresh', undefined, \"New token retrieved\");\n                }\n                else {\n                    dispatchAuthEvent('tokenRefresh_failure', error, \"Failed to retrieve new token\");\n                }\n                return callback(error, data);\n            };\n            return wrapped;\n        }; // prettier-ignore\n        this.configure(config);\n        this.currentCredentials = this.currentCredentials.bind(this);\n        this.currentUserCredentials = this.currentUserCredentials.bind(this);\n        Hub.listen('auth', function (_a) {\n            var payload = _a.payload;\n            var event = payload.event;\n            switch (event) {\n                case 'signIn':\n                    _this._storage.setItem('amplify-signin-with-hostedUI', 'false');\n                    break;\n                case 'signOut':\n                    _this._storage.removeItem('amplify-signin-with-hostedUI');\n                    break;\n                case 'cognitoHostedUI':\n                    _this._storage.setItem('amplify-signin-with-hostedUI', 'true');\n                    break;\n            }\n        });\n    }\n    AuthClass.prototype.getModuleName = function () {\n        return 'Auth';\n    };\n    AuthClass.prototype.configure = function (config) {\n        var _this = this;\n        if (!config)\n            return this._config || {};\n        logger.debug('configure Auth');\n        var conf = Object.assign({}, this._config, Parser.parseMobilehubConfig(config).Auth, config);\n        this._config = conf;\n        var _a = this._config, userPoolId = _a.userPoolId, userPoolWebClientId = _a.userPoolWebClientId, cookieStorage = _a.cookieStorage, oauth = _a.oauth, region = _a.region, identityPoolId = _a.identityPoolId, mandatorySignIn = _a.mandatorySignIn, refreshHandlers = _a.refreshHandlers, identityPoolRegion = _a.identityPoolRegion, clientMetadata = _a.clientMetadata, endpoint = _a.endpoint;\n        if (!this._config.storage) {\n            // backward compatability\n            if (cookieStorage)\n                this._storage = new CookieStorage(cookieStorage);\n            else {\n                this._storage = config.ssr\n                    ? new UniversalStorage()\n                    : new StorageHelper().getStorage();\n            }\n        }\n        else {\n            if (!this._isValidAuthStorage(this._config.storage)) {\n                logger.error('The storage in the Auth config is not valid!');\n                throw new Error('Empty storage object');\n            }\n            this._storage = this._config.storage;\n        }\n        this._storageSync = Promise.resolve();\n        if (typeof this._storage['sync'] === 'function') {\n            this._storageSync = this._storage['sync']();\n        }\n        if (userPoolId) {\n            var userPoolData = {\n                UserPoolId: userPoolId,\n                ClientId: userPoolWebClientId,\n                endpoint: endpoint,\n            };\n            userPoolData.Storage = this._storage;\n            this.userPool = new CognitoUserPool(userPoolData, this.wrapRefreshSessionCallback);\n        }\n        this.Credentials.configure({\n            mandatorySignIn: mandatorySignIn,\n            region: identityPoolRegion || region,\n            userPoolId: userPoolId,\n            identityPoolId: identityPoolId,\n            refreshHandlers: refreshHandlers,\n            storage: this._storage,\n        });\n        // initialize cognitoauth client if hosted ui options provided\n        // to keep backward compatibility:\n        var cognitoHostedUIConfig = oauth\n            ? isCognitoHostedOpts(this._config.oauth)\n                ? oauth\n                : oauth.awsCognito\n            : undefined;\n        if (cognitoHostedUIConfig) {\n            var cognitoAuthParams = Object.assign({\n                cognitoClientId: userPoolWebClientId,\n                UserPoolId: userPoolId,\n                domain: cognitoHostedUIConfig['domain'],\n                scopes: cognitoHostedUIConfig['scope'],\n                redirectSignIn: cognitoHostedUIConfig['redirectSignIn'],\n                redirectSignOut: cognitoHostedUIConfig['redirectSignOut'],\n                responseType: cognitoHostedUIConfig['responseType'],\n                Storage: this._storage,\n                urlOpener: cognitoHostedUIConfig['urlOpener'],\n                clientMetadata: clientMetadata,\n            }, cognitoHostedUIConfig['options']);\n            this._oAuthHandler = new OAuth({\n                scopes: cognitoAuthParams.scopes,\n                config: cognitoAuthParams,\n                cognitoClientId: cognitoAuthParams.cognitoClientId,\n            });\n            // **NOTE** - Remove this in a future major release as it is a breaking change\n            // Prevents _handleAuthResponse from being called multiple times in Expo\n            // See https://github.com/aws-amplify/amplify-js/issues/4388\n            var usedResponseUrls_1 = {};\n            urlListener(function (_a) {\n                var url = _a.url;\n                if (usedResponseUrls_1[url]) {\n                    return;\n                }\n                usedResponseUrls_1[url] = true;\n                _this._handleAuthResponse(url);\n            });\n        }\n        dispatchAuthEvent('configured', null, \"The Auth category has been configured successfully\");\n        return this._config;\n    };\n    /**\n     * Sign up with username, password and other attributes like phone, email\n     * @param {String | object} params - The user attributes used for signin\n     * @param {String[]} restOfAttrs - for the backward compatability\n     * @return - A promise resolves callback data if success\n     */\n    AuthClass.prototype.signUp = function (params) {\n        var _this = this;\n        var restOfAttrs = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            restOfAttrs[_i - 1] = arguments[_i];\n        }\n        if (!this.userPool) {\n            return this.rejectNoUserPool();\n        }\n        var username = null;\n        var password = null;\n        var attributes = [];\n        var validationData = null;\n        var clientMetadata;\n        if (params && typeof params === 'string') {\n            username = params;\n            password = restOfAttrs ? restOfAttrs[0] : null;\n            var email = restOfAttrs ? restOfAttrs[1] : null;\n            var phone_number = restOfAttrs ? restOfAttrs[2] : null;\n            if (email)\n                attributes.push(new CognitoUserAttribute({ Name: 'email', Value: email }));\n            if (phone_number)\n                attributes.push(new CognitoUserAttribute({\n                    Name: 'phone_number',\n                    Value: phone_number,\n                }));\n        }\n        else if (params && typeof params === 'object') {\n            username = params['username'];\n            password = params['password'];\n            if (params && params.clientMetadata) {\n                clientMetadata = params.clientMetadata;\n            }\n            else if (this._config.clientMetadata) {\n                clientMetadata = this._config.clientMetadata;\n            }\n            var attrs_1 = params['attributes'];\n            if (attrs_1) {\n                Object.keys(attrs_1).map(function (key) {\n                    attributes.push(new CognitoUserAttribute({ Name: key, Value: attrs_1[key] }));\n                });\n            }\n            var validationDataObject_1 = params['validationData'];\n            if (validationDataObject_1) {\n                validationData = [];\n                Object.keys(validationDataObject_1).map(function (key) {\n                    validationData.push(new CognitoUserAttribute({\n                        Name: key,\n                        Value: validationDataObject_1[key],\n                    }));\n                });\n            }\n        }\n        else {\n            return this.rejectAuthError(AuthErrorTypes.SignUpError);\n        }\n        if (!username) {\n            return this.rejectAuthError(AuthErrorTypes.EmptyUsername);\n        }\n        if (!password) {\n            return this.rejectAuthError(AuthErrorTypes.EmptyPassword);\n        }\n        logger.debug('signUp attrs:', attributes);\n        logger.debug('signUp validation data:', validationData);\n        return new Promise(function (resolve, reject) {\n            _this.userPool.signUp(username, password, attributes, validationData, function (err, data) {\n                if (err) {\n                    dispatchAuthEvent('signUp_failure', err, username + \" failed to signup\");\n                    reject(err);\n                }\n                else {\n                    dispatchAuthEvent('signUp', data, username + \" has signed up successfully\");\n                    resolve(data);\n                }\n            }, clientMetadata);\n        });\n    };\n    /**\n     * Send the verification code to confirm sign up\n     * @param {String} username - The username to be confirmed\n     * @param {String} code - The verification code\n     * @param {ConfirmSignUpOptions} options - other options for confirm signup\n     * @return - A promise resolves callback data if success\n     */\n    AuthClass.prototype.confirmSignUp = function (username, code, options) {\n        if (!this.userPool) {\n            return this.rejectNoUserPool();\n        }\n        if (!username) {\n            return this.rejectAuthError(AuthErrorTypes.EmptyUsername);\n        }\n        if (!code) {\n            return this.rejectAuthError(AuthErrorTypes.EmptyCode);\n        }\n        var user = this.createCognitoUser(username);\n        var forceAliasCreation = options && typeof options.forceAliasCreation === 'boolean'\n            ? options.forceAliasCreation\n            : true;\n        var clientMetadata;\n        if (options && options.clientMetadata) {\n            clientMetadata = options.clientMetadata;\n        }\n        else if (this._config.clientMetadata) {\n            clientMetadata = this._config.clientMetadata;\n        }\n        return new Promise(function (resolve, reject) {\n            user.confirmRegistration(code, forceAliasCreation, function (err, data) {\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    resolve(data);\n                }\n            }, clientMetadata);\n        });\n    };\n    /**\n     * Resend the verification code\n     * @param {String} username - The username to be confirmed\n     * @param {ClientMetadata} clientMetadata - Metadata to be passed to Cognito Lambda triggers\n     * @return - A promise resolves code delivery details if successful\n     */\n    AuthClass.prototype.resendSignUp = function (username, clientMetadata) {\n        if (clientMetadata === void 0) { clientMetadata = this._config.clientMetadata; }\n        if (!this.userPool) {\n            return this.rejectNoUserPool();\n        }\n        if (!username) {\n            return this.rejectAuthError(AuthErrorTypes.EmptyUsername);\n        }\n        var user = this.createCognitoUser(username);\n        return new Promise(function (resolve, reject) {\n            user.resendConfirmationCode(function (err, data) {\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    resolve(data);\n                }\n            }, clientMetadata);\n        });\n    };\n    /**\n     * Sign in\n     * @param {String | SignInOpts} usernameOrSignInOpts - The username to be signed in or the sign in options\n     * @param {String} password - The password of the username\n     * @return - A promise resolves the CognitoUser\n     */\n    AuthClass.prototype.signIn = function (usernameOrSignInOpts, pw, clientMetadata) {\n        if (clientMetadata === void 0) { clientMetadata = this._config.clientMetadata; }\n        if (!this.userPool) {\n            return this.rejectNoUserPool();\n        }\n        var username = null;\n        var password = null;\n        var validationData = {};\n        // for backward compatibility\n        if (typeof usernameOrSignInOpts === 'string') {\n            username = usernameOrSignInOpts;\n            password = pw;\n        }\n        else if (isUsernamePasswordOpts(usernameOrSignInOpts)) {\n            if (typeof pw !== 'undefined') {\n                logger.warn('The password should be defined under the first parameter object!');\n            }\n            username = usernameOrSignInOpts.username;\n            password = usernameOrSignInOpts.password;\n            validationData = usernameOrSignInOpts.validationData;\n        }\n        else {\n            return this.rejectAuthError(AuthErrorTypes.InvalidUsername);\n        }\n        if (!username) {\n            return this.rejectAuthError(AuthErrorTypes.EmptyUsername);\n        }\n        var authDetails = new AuthenticationDetails({\n            Username: username,\n            Password: password,\n            ValidationData: validationData,\n            ClientMetadata: clientMetadata,\n        });\n        if (password) {\n            return this.signInWithPassword(authDetails);\n        }\n        else {\n            return this.signInWithoutPassword(authDetails);\n        }\n    };\n    /**\n     * Return an object with the authentication callbacks\n     * @param {CognitoUser} user - the cognito user object\n     * @param {} resolve - function called when resolving the current step\n     * @param {} reject - function called when rejecting the current step\n     * @return - an object with the callback methods for user authentication\n     */\n    AuthClass.prototype.authCallbacks = function (user, resolve, reject) {\n        var _this = this;\n        var that = this;\n        return {\n            onSuccess: function (session) { return __awaiter(_this, void 0, void 0, function () {\n                var cred, e_1, currentUser, e_2;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            logger.debug(session);\n                            delete user['challengeName'];\n                            delete user['challengeParam'];\n                            _a.label = 1;\n                        case 1:\n                            _a.trys.push([1, 4, 5, 9]);\n                            return [4 /*yield*/, this.Credentials.clear()];\n                        case 2:\n                            _a.sent();\n                            return [4 /*yield*/, this.Credentials.set(session, 'session')];\n                        case 3:\n                            cred = _a.sent();\n                            logger.debug('succeed to get cognito credentials', cred);\n                            return [3 /*break*/, 9];\n                        case 4:\n                            e_1 = _a.sent();\n                            logger.debug('cannot get cognito credentials', e_1);\n                            return [3 /*break*/, 9];\n                        case 5:\n                            _a.trys.push([5, 7, , 8]);\n                            return [4 /*yield*/, this.currentUserPoolUser()];\n                        case 6:\n                            currentUser = _a.sent();\n                            that.user = currentUser;\n                            dispatchAuthEvent('signIn', currentUser, \"A user \" + user.getUsername() + \" has been signed in\");\n                            resolve(currentUser);\n                            return [3 /*break*/, 8];\n                        case 7:\n                            e_2 = _a.sent();\n                            logger.error('Failed to get the signed in user', e_2);\n                            reject(e_2);\n                            return [3 /*break*/, 8];\n                        case 8: return [7 /*endfinally*/];\n                        case 9: return [2 /*return*/];\n                    }\n                });\n            }); },\n            onFailure: function (err) {\n                logger.debug('signIn failure', err);\n                dispatchAuthEvent('signIn_failure', err, user.getUsername() + \" failed to signin\");\n                reject(err);\n            },\n            customChallenge: function (challengeParam) {\n                logger.debug('signIn custom challenge answer required');\n                user['challengeName'] = 'CUSTOM_CHALLENGE';\n                user['challengeParam'] = challengeParam;\n                resolve(user);\n            },\n            mfaRequired: function (challengeName, challengeParam) {\n                logger.debug('signIn MFA required');\n                user['challengeName'] = challengeName;\n                user['challengeParam'] = challengeParam;\n                resolve(user);\n            },\n            mfaSetup: function (challengeName, challengeParam) {\n                logger.debug('signIn mfa setup', challengeName);\n                user['challengeName'] = challengeName;\n                user['challengeParam'] = challengeParam;\n                resolve(user);\n            },\n            newPasswordRequired: function (userAttributes, requiredAttributes) {\n                logger.debug('signIn new password');\n                user['challengeName'] = 'NEW_PASSWORD_REQUIRED';\n                user['challengeParam'] = {\n                    userAttributes: userAttributes,\n                    requiredAttributes: requiredAttributes,\n                };\n                resolve(user);\n            },\n            totpRequired: function (challengeName, challengeParam) {\n                logger.debug('signIn totpRequired');\n                user['challengeName'] = challengeName;\n                user['challengeParam'] = challengeParam;\n                resolve(user);\n            },\n            selectMFAType: function (challengeName, challengeParam) {\n                logger.debug('signIn selectMFAType', challengeName);\n                user['challengeName'] = challengeName;\n                user['challengeParam'] = challengeParam;\n                resolve(user);\n            },\n        };\n    };\n    /**\n     * Sign in with a password\n     * @private\n     * @param {AuthenticationDetails} authDetails - the user sign in data\n     * @return - A promise resolves the CognitoUser object if success or mfa required\n     */\n    AuthClass.prototype.signInWithPassword = function (authDetails) {\n        var _this = this;\n        if (this.pendingSignIn) {\n            throw new Error('Pending sign-in attempt already in progress');\n        }\n        var user = this.createCognitoUser(authDetails.getUsername());\n        this.pendingSignIn = new Promise(function (resolve, reject) {\n            user.authenticateUser(authDetails, _this.authCallbacks(user, function (value) {\n                _this.pendingSignIn = null;\n                resolve(value);\n            }, function (error) {\n                _this.pendingSignIn = null;\n                reject(error);\n            }));\n        });\n        return this.pendingSignIn;\n    };\n    /**\n     * Sign in without a password\n     * @private\n     * @param {AuthenticationDetails} authDetails - the user sign in data\n     * @return - A promise resolves the CognitoUser object if success or mfa required\n     */\n    AuthClass.prototype.signInWithoutPassword = function (authDetails) {\n        var _this = this;\n        var user = this.createCognitoUser(authDetails.getUsername());\n        user.setAuthenticationFlowType('CUSTOM_AUTH');\n        return new Promise(function (resolve, reject) {\n            user.initiateAuth(authDetails, _this.authCallbacks(user, resolve, reject));\n        });\n    };\n    /**\n     * This was previously used by an authenticated user to get MFAOptions,\n     * but no longer returns a meaningful response. Refer to the documentation for\n     * how to setup and use MFA: https://docs.amplify.aws/lib/auth/mfa/q/platform/js\n     * @deprecated\n     * @param {CognitoUser} user - the current user\n     * @return - A promise resolves the current preferred mfa option if success\n     */\n    AuthClass.prototype.getMFAOptions = function (user) {\n        return new Promise(function (res, rej) {\n            user.getMFAOptions(function (err, mfaOptions) {\n                if (err) {\n                    logger.debug('get MFA Options failed', err);\n                    rej(err);\n                    return;\n                }\n                logger.debug('get MFA options success', mfaOptions);\n                res(mfaOptions);\n                return;\n            });\n        });\n    };\n    /**\n     * get preferred mfa method\n     * @param {CognitoUser} user - the current cognito user\n     * @param {GetPreferredMFAOpts} params - options for getting the current user preferred MFA\n     */\n    AuthClass.prototype.getPreferredMFA = function (user, params) {\n        var _this = this;\n        var that = this;\n        return new Promise(function (res, rej) {\n            var clientMetadata = _this._config.clientMetadata; // TODO: verify behavior if this is override during signIn\n            var bypassCache = params ? params.bypassCache : false;\n            user.getUserData(function (err, data) {\n                if (err) {\n                    logger.debug('getting preferred mfa failed', err);\n                    rej(err);\n                    return;\n                }\n                var mfaType = that._getMfaTypeFromUserData(data);\n                if (!mfaType) {\n                    rej('invalid MFA Type');\n                    return;\n                }\n                else {\n                    res(mfaType);\n                    return;\n                }\n            }, { bypassCache: bypassCache, clientMetadata: clientMetadata });\n        });\n    };\n    AuthClass.prototype._getMfaTypeFromUserData = function (data) {\n        var ret = null;\n        var preferredMFA = data.PreferredMfaSetting;\n        // if the user has used Auth.setPreferredMFA() to setup the mfa type\n        // then the \"PreferredMfaSetting\" would exist in the response\n        if (preferredMFA) {\n            ret = preferredMFA;\n        }\n        else {\n            // if mfaList exists but empty, then its noMFA\n            var mfaList = data.UserMFASettingList;\n            if (!mfaList) {\n                // if SMS was enabled by using Auth.enableSMS(),\n                // the response would contain MFAOptions\n                // as for now Cognito only supports for SMS, so we will say it is 'SMS_MFA'\n                // if it does not exist, then it should be NOMFA\n                var MFAOptions = data.MFAOptions;\n                if (MFAOptions) {\n                    ret = 'SMS_MFA';\n                }\n                else {\n                    ret = 'NOMFA';\n                }\n            }\n            else if (mfaList.length === 0) {\n                ret = 'NOMFA';\n            }\n            else {\n                logger.debug('invalid case for getPreferredMFA', data);\n            }\n        }\n        return ret;\n    };\n    AuthClass.prototype._getUserData = function (user, params) {\n        return new Promise(function (res, rej) {\n            user.getUserData(function (err, data) {\n                if (err) {\n                    logger.debug('getting user data failed', err);\n                    rej(err);\n                    return;\n                }\n                else {\n                    res(data);\n                    return;\n                }\n            }, params);\n        });\n    };\n    /**\n     * set preferred MFA method\n     * @param {CognitoUser} user - the current Cognito user\n     * @param {string} mfaMethod - preferred mfa method\n     * @return - A promise resolve if success\n     */\n    AuthClass.prototype.setPreferredMFA = function (user, mfaMethod) {\n        return __awaiter(this, void 0, void 0, function () {\n            var clientMetadata, userData, smsMfaSettings, totpMfaSettings, _a, mfaList, currentMFAType, that;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        clientMetadata = this._config.clientMetadata;\n                        return [4 /*yield*/, this._getUserData(user, {\n                                bypassCache: true,\n                                clientMetadata: clientMetadata,\n                            })];\n                    case 1:\n                        userData = _b.sent();\n                        smsMfaSettings = null;\n                        totpMfaSettings = null;\n                        _a = mfaMethod;\n                        switch (_a) {\n                            case 'TOTP': return [3 /*break*/, 2];\n                            case 'SOFTWARE_TOKEN_MFA': return [3 /*break*/, 2];\n                            case 'SMS': return [3 /*break*/, 3];\n                            case 'SMS_MFA': return [3 /*break*/, 3];\n                            case 'NOMFA': return [3 /*break*/, 4];\n                        }\n                        return [3 /*break*/, 6];\n                    case 2:\n                        totpMfaSettings = {\n                            PreferredMfa: true,\n                            Enabled: true,\n                        };\n                        return [3 /*break*/, 7];\n                    case 3:\n                        smsMfaSettings = {\n                            PreferredMfa: true,\n                            Enabled: true,\n                        };\n                        return [3 /*break*/, 7];\n                    case 4:\n                        mfaList = userData['UserMFASettingList'];\n                        return [4 /*yield*/, this._getMfaTypeFromUserData(userData)];\n                    case 5:\n                        currentMFAType = _b.sent();\n                        if (currentMFAType === 'NOMFA') {\n                            return [2 /*return*/, Promise.resolve('No change for mfa type')];\n                        }\n                        else if (currentMFAType === 'SMS_MFA') {\n                            smsMfaSettings = {\n                                PreferredMfa: false,\n                                Enabled: false,\n                            };\n                        }\n                        else if (currentMFAType === 'SOFTWARE_TOKEN_MFA') {\n                            totpMfaSettings = {\n                                PreferredMfa: false,\n                                Enabled: false,\n                            };\n                        }\n                        else {\n                            return [2 /*return*/, this.rejectAuthError(AuthErrorTypes.InvalidMFA)];\n                        }\n                        // if there is a UserMFASettingList in the response\n                        // we need to disable every mfa type in that list\n                        if (mfaList && mfaList.length !== 0) {\n                            // to disable SMS or TOTP if exists in that list\n                            mfaList.forEach(function (mfaType) {\n                                if (mfaType === 'SMS_MFA') {\n                                    smsMfaSettings = {\n                                        PreferredMfa: false,\n                                        Enabled: false,\n                                    };\n                                }\n                                else if (mfaType === 'SOFTWARE_TOKEN_MFA') {\n                                    totpMfaSettings = {\n                                        PreferredMfa: false,\n                                        Enabled: false,\n                                    };\n                                }\n                            });\n                        }\n                        return [3 /*break*/, 7];\n                    case 6:\n                        logger.debug('no validmfa method provided');\n                        return [2 /*return*/, this.rejectAuthError(AuthErrorTypes.NoMFA)];\n                    case 7:\n                        that = this;\n                        return [2 /*return*/, new Promise(function (res, rej) {\n                                user.setUserMfaPreference(smsMfaSettings, totpMfaSettings, function (err, result) {\n                                    if (err) {\n                                        logger.debug('Set user mfa preference error', err);\n                                        return rej(err);\n                                    }\n                                    logger.debug('Set user mfa success', result);\n                                    logger.debug('Caching the latest user data into local');\n                                    // cache the latest result into user data\n                                    user.getUserData(function (err, data) {\n                                        if (err) {\n                                            logger.debug('getting user data failed', err);\n                                            return rej(err);\n                                        }\n                                        else {\n                                            return res(result);\n                                        }\n                                    }, {\n                                        bypassCache: true,\n                                        clientMetadata: clientMetadata,\n                                    });\n                                });\n                            })];\n                }\n            });\n        });\n    };\n    /**\n     * disable SMS\n     * @deprecated\n     * @param {CognitoUser} user - the current user\n     * @return - A promise resolves is success\n     */\n    AuthClass.prototype.disableSMS = function (user) {\n        return new Promise(function (res, rej) {\n            user.disableMFA(function (err, data) {\n                if (err) {\n                    logger.debug('disable mfa failed', err);\n                    rej(err);\n                    return;\n                }\n                logger.debug('disable mfa succeed', data);\n                res(data);\n                return;\n            });\n        });\n    };\n    /**\n     * enable SMS\n     * @deprecated\n     * @param {CognitoUser} user - the current user\n     * @return - A promise resolves is success\n     */\n    AuthClass.prototype.enableSMS = function (user) {\n        return new Promise(function (res, rej) {\n            user.enableMFA(function (err, data) {\n                if (err) {\n                    logger.debug('enable mfa failed', err);\n                    rej(err);\n                    return;\n                }\n                logger.debug('enable mfa succeed', data);\n                res(data);\n                return;\n            });\n        });\n    };\n    /**\n     * Setup TOTP\n     * @param {CognitoUser} user - the current user\n     * @return - A promise resolves with the secret code if success\n     */\n    AuthClass.prototype.setupTOTP = function (user) {\n        return new Promise(function (res, rej) {\n            user.associateSoftwareToken({\n                onFailure: function (err) {\n                    logger.debug('associateSoftwareToken failed', err);\n                    rej(err);\n                    return;\n                },\n                associateSecretCode: function (secretCode) {\n                    logger.debug('associateSoftwareToken sucess', secretCode);\n                    res(secretCode);\n                    return;\n                },\n            });\n        });\n    };\n    /**\n     * verify TOTP setup\n     * @param {CognitoUser} user - the current user\n     * @param {string} challengeAnswer - challenge answer\n     * @return - A promise resolves is success\n     */\n    AuthClass.prototype.verifyTotpToken = function (user, challengeAnswer) {\n        logger.debug('verification totp token', user, challengeAnswer);\n        return new Promise(function (res, rej) {\n            user.verifySoftwareToken(challengeAnswer, 'My TOTP device', {\n                onFailure: function (err) {\n                    logger.debug('verifyTotpToken failed', err);\n                    rej(err);\n                    return;\n                },\n                onSuccess: function (data) {\n                    dispatchAuthEvent('signIn', user, \"A user \" + user.getUsername() + \" has been signed in\");\n                    logger.debug('verifyTotpToken success', data);\n                    res(data);\n                    return;\n                },\n            });\n        });\n    };\n    /**\n     * Send MFA code to confirm sign in\n     * @param {Object} user - The CognitoUser object\n     * @param {String} code - The confirmation code\n     */\n    AuthClass.prototype.confirmSignIn = function (user, code, mfaType, clientMetadata) {\n        var _this = this;\n        if (clientMetadata === void 0) { clientMetadata = this._config.clientMetadata; }\n        if (!code) {\n            return this.rejectAuthError(AuthErrorTypes.EmptyCode);\n        }\n        var that = this;\n        return new Promise(function (resolve, reject) {\n            user.sendMFACode(code, {\n                onSuccess: function (session) { return __awaiter(_this, void 0, void 0, function () {\n                    var cred, e_3;\n                    return __generator(this, function (_a) {\n                        switch (_a.label) {\n                            case 0:\n                                logger.debug(session);\n                                _a.label = 1;\n                            case 1:\n                                _a.trys.push([1, 4, 5, 6]);\n                                return [4 /*yield*/, this.Credentials.clear()];\n                            case 2:\n                                _a.sent();\n                                return [4 /*yield*/, this.Credentials.set(session, 'session')];\n                            case 3:\n                                cred = _a.sent();\n                                logger.debug('succeed to get cognito credentials', cred);\n                                return [3 /*break*/, 6];\n                            case 4:\n                                e_3 = _a.sent();\n                                logger.debug('cannot get cognito credentials', e_3);\n                                return [3 /*break*/, 6];\n                            case 5:\n                                that.user = user;\n                                dispatchAuthEvent('signIn', user, \"A user \" + user.getUsername() + \" has been signed in\");\n                                resolve(user);\n                                return [7 /*endfinally*/];\n                            case 6: return [2 /*return*/];\n                        }\n                    });\n                }); },\n                onFailure: function (err) {\n                    logger.debug('confirm signIn failure', err);\n                    reject(err);\n                },\n            }, mfaType, clientMetadata);\n        });\n    };\n    AuthClass.prototype.completeNewPassword = function (user, password, requiredAttributes, clientMetadata) {\n        var _this = this;\n        if (requiredAttributes === void 0) { requiredAttributes = {}; }\n        if (clientMetadata === void 0) { clientMetadata = this._config.clientMetadata; }\n        if (!password) {\n            return this.rejectAuthError(AuthErrorTypes.EmptyPassword);\n        }\n        var that = this;\n        return new Promise(function (resolve, reject) {\n            user.completeNewPasswordChallenge(password, requiredAttributes, {\n                onSuccess: function (session) { return __awaiter(_this, void 0, void 0, function () {\n                    var cred, e_4;\n                    return __generator(this, function (_a) {\n                        switch (_a.label) {\n                            case 0:\n                                logger.debug(session);\n                                _a.label = 1;\n                            case 1:\n                                _a.trys.push([1, 4, 5, 6]);\n                                return [4 /*yield*/, this.Credentials.clear()];\n                            case 2:\n                                _a.sent();\n                                return [4 /*yield*/, this.Credentials.set(session, 'session')];\n                            case 3:\n                                cred = _a.sent();\n                                logger.debug('succeed to get cognito credentials', cred);\n                                return [3 /*break*/, 6];\n                            case 4:\n                                e_4 = _a.sent();\n                                logger.debug('cannot get cognito credentials', e_4);\n                                return [3 /*break*/, 6];\n                            case 5:\n                                that.user = user;\n                                dispatchAuthEvent('signIn', user, \"A user \" + user.getUsername() + \" has been signed in\");\n                                resolve(user);\n                                return [7 /*endfinally*/];\n                            case 6: return [2 /*return*/];\n                        }\n                    });\n                }); },\n                onFailure: function (err) {\n                    logger.debug('completeNewPassword failure', err);\n                    dispatchAuthEvent('completeNewPassword_failure', err, _this.user + \" failed to complete the new password flow\");\n                    reject(err);\n                },\n                mfaRequired: function (challengeName, challengeParam) {\n                    logger.debug('signIn MFA required');\n                    user['challengeName'] = challengeName;\n                    user['challengeParam'] = challengeParam;\n                    resolve(user);\n                },\n                mfaSetup: function (challengeName, challengeParam) {\n                    logger.debug('signIn mfa setup', challengeName);\n                    user['challengeName'] = challengeName;\n                    user['challengeParam'] = challengeParam;\n                    resolve(user);\n                },\n                totpRequired: function (challengeName, challengeParam) {\n                    logger.debug('signIn mfa setup', challengeName);\n                    user['challengeName'] = challengeName;\n                    user['challengeParam'] = challengeParam;\n                    resolve(user);\n                },\n            }, clientMetadata);\n        });\n    };\n    /**\n     * Send the answer to a custom challenge\n     * @param {CognitoUser} user - The CognitoUser object\n     * @param {String} challengeResponses - The confirmation code\n     */\n    AuthClass.prototype.sendCustomChallengeAnswer = function (user, challengeResponses, clientMetadata) {\n        var _this = this;\n        if (clientMetadata === void 0) { clientMetadata = this._config.clientMetadata; }\n        if (!this.userPool) {\n            return this.rejectNoUserPool();\n        }\n        if (!challengeResponses) {\n            return this.rejectAuthError(AuthErrorTypes.EmptyChallengeResponse);\n        }\n        var that = this;\n        return new Promise(function (resolve, reject) {\n            user.sendCustomChallengeAnswer(challengeResponses, _this.authCallbacks(user, resolve, reject), clientMetadata);\n        });\n    };\n    /**\n     * Delete an authenticated users' attributes\n     * @param {CognitoUser} - The currently logged in user object\n     * @return {Promise}\n     **/\n    AuthClass.prototype.deleteUserAttributes = function (user, attributeNames) {\n        var that = this;\n        return new Promise(function (resolve, reject) {\n            that.userSession(user).then(function (session) {\n                user.deleteAttributes(attributeNames, function (err, result) {\n                    if (err) {\n                        return reject(err);\n                    }\n                    else {\n                        return resolve(result);\n                    }\n                });\n            });\n        });\n    };\n    /**\n     * Update an authenticated users' attributes\n     * @param {CognitoUser} - The currently logged in user object\n     * @return {Promise}\n     **/\n    AuthClass.prototype.updateUserAttributes = function (user, attributes, clientMetadata) {\n        if (clientMetadata === void 0) { clientMetadata = this._config.clientMetadata; }\n        var attributeList = [];\n        var that = this;\n        return new Promise(function (resolve, reject) {\n            that.userSession(user).then(function (session) {\n                for (var key in attributes) {\n                    if (key !== 'sub' && key.indexOf('_verified') < 0) {\n                        var attr = {\n                            Name: key,\n                            Value: attributes[key],\n                        };\n                        attributeList.push(attr);\n                    }\n                }\n                user.updateAttributes(attributeList, function (err, result) {\n                    if (err) {\n                        return reject(err);\n                    }\n                    else {\n                        return resolve(result);\n                    }\n                }, clientMetadata);\n            });\n        });\n    };\n    /**\n     * Return user attributes\n     * @param {Object} user - The CognitoUser object\n     * @return - A promise resolves to user attributes if success\n     */\n    AuthClass.prototype.userAttributes = function (user) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this.userSession(user).then(function (session) {\n                user.getUserAttributes(function (err, attributes) {\n                    if (err) {\n                        reject(err);\n                    }\n                    else {\n                        resolve(attributes);\n                    }\n                });\n            });\n        });\n    };\n    AuthClass.prototype.verifiedContact = function (user) {\n        var that = this;\n        return this.userAttributes(user).then(function (attributes) {\n            var attrs = that.attributesToObject(attributes);\n            var unverified = {};\n            var verified = {};\n            if (attrs['email']) {\n                if (attrs['email_verified']) {\n                    verified['email'] = attrs['email'];\n                }\n                else {\n                    unverified['email'] = attrs['email'];\n                }\n            }\n            if (attrs['phone_number']) {\n                if (attrs['phone_number_verified']) {\n                    verified['phone_number'] = attrs['phone_number'];\n                }\n                else {\n                    unverified['phone_number'] = attrs['phone_number'];\n                }\n            }\n            return {\n                verified: verified,\n                unverified: unverified,\n            };\n        });\n    };\n    /**\n     * Get current authenticated user\n     * @return - A promise resolves to current authenticated CognitoUser if success\n     */\n    AuthClass.prototype.currentUserPoolUser = function (params) {\n        var _this = this;\n        if (!this.userPool) {\n            return this.rejectNoUserPool();\n        }\n        return new Promise(function (res, rej) {\n            _this._storageSync\n                .then(function () { return __awaiter(_this, void 0, void 0, function () {\n                var user, clientMetadata;\n                var _this = this;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            if (!this.isOAuthInProgress()) return [3 /*break*/, 2];\n                            logger.debug('OAuth signIn in progress, waiting for resolution...');\n                            return [4 /*yield*/, new Promise(function (res) {\n                                    var timeoutId = setTimeout(function () {\n                                        logger.debug('OAuth signIn in progress timeout');\n                                        Hub.remove('auth', hostedUISignCallback);\n                                        res();\n                                    }, OAUTH_FLOW_MS_TIMEOUT);\n                                    Hub.listen('auth', hostedUISignCallback);\n                                    function hostedUISignCallback(_a) {\n                                        var payload = _a.payload;\n                                        var event = payload.event;\n                                        if (event === 'cognitoHostedUI' ||\n                                            event === 'cognitoHostedUI_failure') {\n                                            logger.debug(\"OAuth signIn resolved: \" + event);\n                                            clearTimeout(timeoutId);\n                                            Hub.remove('auth', hostedUISignCallback);\n                                            res();\n                                        }\n                                    }\n                                })];\n                        case 1:\n                            _a.sent();\n                            _a.label = 2;\n                        case 2:\n                            user = this.userPool.getCurrentUser();\n                            if (!user) {\n                                logger.debug('Failed to get user from user pool');\n                                rej('No current user');\n                                return [2 /*return*/];\n                            }\n                            clientMetadata = this._config.clientMetadata;\n                            // refresh the session if the session expired.\n                            user.getSession(function (err, session) { return __awaiter(_this, void 0, void 0, function () {\n                                var bypassCache, clientMetadata, _a, scope;\n                                var _this = this;\n                                return __generator(this, function (_b) {\n                                    switch (_b.label) {\n                                        case 0:\n                                            if (err) {\n                                                logger.debug('Failed to get the user session', err);\n                                                rej(err);\n                                                return [2 /*return*/];\n                                            }\n                                            bypassCache = params ? params.bypassCache : false;\n                                            if (!bypassCache) return [3 /*break*/, 2];\n                                            return [4 /*yield*/, this.Credentials.clear()];\n                                        case 1:\n                                            _b.sent();\n                                            _b.label = 2;\n                                        case 2:\n                                            clientMetadata = this._config.clientMetadata;\n                                            _a = session.getAccessToken().decodePayload().scope, scope = _a === void 0 ? '' : _a;\n                                            if (scope.split(' ').includes(USER_ADMIN_SCOPE)) {\n                                                user.getUserData(function (err, data) {\n                                                    if (err) {\n                                                        logger.debug('getting user data failed', err);\n                                                        // Make sure the user is still valid\n                                                        if (err.message === 'User is disabled.' ||\n                                                            err.message === 'User does not exist.' ||\n                                                            err.message === 'Access Token has been revoked' // Session revoked by another app\n                                                        ) {\n                                                            rej(err);\n                                                        }\n                                                        else {\n                                                            // the error may also be thrown when lack of permissions to get user info etc\n                                                            // in that case we just bypass the error\n                                                            res(user);\n                                                        }\n                                                        return;\n                                                    }\n                                                    var preferredMFA = data.PreferredMfaSetting || 'NOMFA';\n                                                    var attributeList = [];\n                                                    for (var i = 0; i < data.UserAttributes.length; i++) {\n                                                        var attribute = {\n                                                            Name: data.UserAttributes[i].Name,\n                                                            Value: data.UserAttributes[i].Value,\n                                                        };\n                                                        var userAttribute = new CognitoUserAttribute(attribute);\n                                                        attributeList.push(userAttribute);\n                                                    }\n                                                    var attributes = _this.attributesToObject(attributeList);\n                                                    Object.assign(user, { attributes: attributes, preferredMFA: preferredMFA });\n                                                    return res(user);\n                                                }, { bypassCache: bypassCache, clientMetadata: clientMetadata });\n                                            }\n                                            else {\n                                                logger.debug(\"Unable to get the user data because the \" + USER_ADMIN_SCOPE + \" \" +\n                                                    \"is not in the scopes of the access token\");\n                                                return [2 /*return*/, res(user)];\n                                            }\n                                            return [2 /*return*/];\n                                    }\n                                });\n                            }); }, { clientMetadata: clientMetadata });\n                            return [2 /*return*/];\n                    }\n                });\n            }); })\n                .catch(function (e) {\n                logger.debug('Failed to sync cache info into memory', e);\n                return rej(e);\n            });\n        });\n    };\n    AuthClass.prototype.isOAuthInProgress = function () {\n        return this.oAuthFlowInProgress;\n    };\n    /**\n     * Get current authenticated user\n     * @param {CurrentUserOpts} - options for getting the current user\n     * @return - A promise resolves to current authenticated CognitoUser if success\n     */\n    AuthClass.prototype.currentAuthenticatedUser = function (params) {\n        return __awaiter(this, void 0, void 0, function () {\n            var federatedUser, e_5, federatedInfo, user, e_6;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        logger.debug('getting current authenticated user');\n                        federatedUser = null;\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, this._storageSync];\n                    case 2:\n                        _a.sent();\n                        return [3 /*break*/, 4];\n                    case 3:\n                        e_5 = _a.sent();\n                        logger.debug('Failed to sync cache info into memory', e_5);\n                        throw e_5;\n                    case 4:\n                        try {\n                            federatedInfo = JSON.parse(this._storage.getItem('aws-amplify-federatedInfo'));\n                            if (federatedInfo) {\n                                federatedUser = __assign(__assign({}, federatedInfo.user), { token: federatedInfo.token });\n                            }\n                        }\n                        catch (e) {\n                            logger.debug('cannot load federated user from auth storage');\n                        }\n                        if (!federatedUser) return [3 /*break*/, 5];\n                        this.user = federatedUser;\n                        logger.debug('get current authenticated federated user', this.user);\n                        return [2 /*return*/, this.user];\n                    case 5:\n                        logger.debug('get current authenticated userpool user');\n                        user = null;\n                        _a.label = 6;\n                    case 6:\n                        _a.trys.push([6, 8, , 9]);\n                        return [4 /*yield*/, this.currentUserPoolUser(params)];\n                    case 7:\n                        user = _a.sent();\n                        return [3 /*break*/, 9];\n                    case 8:\n                        e_6 = _a.sent();\n                        if (e_6 === 'No userPool') {\n                            logger.error('Cannot get the current user because the user pool is missing. ' +\n                                'Please make sure the Auth module is configured with a valid Cognito User Pool ID');\n                        }\n                        logger.debug('The user is not authenticated by the error', e_6);\n                        return [2 /*return*/, Promise.reject('The user is not authenticated')];\n                    case 9:\n                        this.user = user;\n                        return [2 /*return*/, this.user];\n                }\n            });\n        });\n    };\n    /**\n     * Get current user's session\n     * @return - A promise resolves to session object if success\n     */\n    AuthClass.prototype.currentSession = function () {\n        var that = this;\n        logger.debug('Getting current session');\n        // Purposely not calling the reject method here because we don't need a console error\n        if (!this.userPool) {\n            return Promise.reject();\n        }\n        return new Promise(function (res, rej) {\n            that\n                .currentUserPoolUser()\n                .then(function (user) {\n                that\n                    .userSession(user)\n                    .then(function (session) {\n                    res(session);\n                    return;\n                })\n                    .catch(function (e) {\n                    logger.debug('Failed to get the current session', e);\n                    rej(e);\n                    return;\n                });\n            })\n                .catch(function (e) {\n                logger.debug('Failed to get the current user', e);\n                rej(e);\n                return;\n            });\n        });\n    };\n    /**\n     * Get the corresponding user session\n     * @param {Object} user - The CognitoUser object\n     * @return - A promise resolves to the session\n     */\n    AuthClass.prototype.userSession = function (user) {\n        if (!user) {\n            logger.debug('the user is null');\n            return this.rejectAuthError(AuthErrorTypes.NoUserSession);\n        }\n        var clientMetadata = this._config.clientMetadata; // TODO: verify behavior if this is override during signIn\n        return new Promise(function (resolve, reject) {\n            logger.debug('Getting the session from this user:', user);\n            user.getSession(function (err, session) {\n                if (err) {\n                    logger.debug('Failed to get the session from user', user);\n                    reject(err);\n                    return;\n                }\n                else {\n                    logger.debug('Succeed to get the user session', session);\n                    resolve(session);\n                    return;\n                }\n            }, { clientMetadata: clientMetadata });\n        });\n    };\n    /**\n     * Get authenticated credentials of current user.\n     * @return - A promise resolves to be current user's credentials\n     */\n    AuthClass.prototype.currentUserCredentials = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var e_7, federatedInfo;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        logger.debug('Getting current user credentials');\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, this._storageSync];\n                    case 2:\n                        _a.sent();\n                        return [3 /*break*/, 4];\n                    case 3:\n                        e_7 = _a.sent();\n                        logger.debug('Failed to sync cache info into memory', e_7);\n                        throw e_7;\n                    case 4:\n                        federatedInfo = null;\n                        try {\n                            federatedInfo = JSON.parse(this._storage.getItem('aws-amplify-federatedInfo'));\n                        }\n                        catch (e) {\n                            logger.debug('failed to get or parse item aws-amplify-federatedInfo', e);\n                        }\n                        if (federatedInfo) {\n                            // refresh the jwt token here if necessary\n                            return [2 /*return*/, this.Credentials.refreshFederatedToken(federatedInfo)];\n                        }\n                        else {\n                            return [2 /*return*/, this.currentSession()\n                                    .then(function (session) {\n                                    logger.debug('getting session success', session);\n                                    return _this.Credentials.set(session, 'session');\n                                })\n                                    .catch(function (error) {\n                                    logger.debug('getting session failed', error);\n                                    return _this.Credentials.set(null, 'guest');\n                                })];\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AuthClass.prototype.currentCredentials = function () {\n        logger.debug('getting current credentials');\n        return this.Credentials.get();\n    };\n    /**\n     * Initiate an attribute confirmation request\n     * @param {Object} user - The CognitoUser\n     * @param {Object} attr - The attributes to be verified\n     * @return - A promise resolves to callback data if success\n     */\n    AuthClass.prototype.verifyUserAttribute = function (user, attr, clientMetadata) {\n        if (clientMetadata === void 0) { clientMetadata = this._config.clientMetadata; }\n        return new Promise(function (resolve, reject) {\n            user.getAttributeVerificationCode(attr, {\n                onSuccess: function (success) {\n                    return resolve(success);\n                },\n                onFailure: function (err) {\n                    return reject(err);\n                },\n            }, clientMetadata);\n        });\n    };\n    /**\n     * Confirm an attribute using a confirmation code\n     * @param {Object} user - The CognitoUser\n     * @param {Object} attr - The attribute to be verified\n     * @param {String} code - The confirmation code\n     * @return - A promise resolves to callback data if success\n     */\n    AuthClass.prototype.verifyUserAttributeSubmit = function (user, attr, code) {\n        if (!code) {\n            return this.rejectAuthError(AuthErrorTypes.EmptyCode);\n        }\n        return new Promise(function (resolve, reject) {\n            user.verifyAttribute(attr, code, {\n                onSuccess: function (data) {\n                    resolve(data);\n                    return;\n                },\n                onFailure: function (err) {\n                    reject(err);\n                    return;\n                },\n            });\n        });\n    };\n    AuthClass.prototype.verifyCurrentUserAttribute = function (attr) {\n        var that = this;\n        return that\n            .currentUserPoolUser()\n            .then(function (user) { return that.verifyUserAttribute(user, attr); });\n    };\n    /**\n     * Confirm current user's attribute using a confirmation code\n     * @param {Object} attr - The attribute to be verified\n     * @param {String} code - The confirmation code\n     * @return - A promise resolves to callback data if success\n     */\n    AuthClass.prototype.verifyCurrentUserAttributeSubmit = function (attr, code) {\n        var that = this;\n        return that\n            .currentUserPoolUser()\n            .then(function (user) { return that.verifyUserAttributeSubmit(user, attr, code); });\n    };\n    AuthClass.prototype.cognitoIdentitySignOut = function (opts, user) {\n        return __awaiter(this, void 0, void 0, function () {\n            var e_8, isSignedInHostedUI;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this._storageSync];\n                    case 1:\n                        _a.sent();\n                        return [3 /*break*/, 3];\n                    case 2:\n                        e_8 = _a.sent();\n                        logger.debug('Failed to sync cache info into memory', e_8);\n                        throw e_8;\n                    case 3:\n                        isSignedInHostedUI = this._oAuthHandler &&\n                            this._storage.getItem('amplify-signin-with-hostedUI') === 'true';\n                        return [2 /*return*/, new Promise(function (res, rej) {\n                                if (opts && opts.global) {\n                                    logger.debug('user global sign out', user);\n                                    // in order to use global signout\n                                    // we must validate the user as an authenticated user by using getSession\n                                    var clientMetadata = _this._config.clientMetadata; // TODO: verify behavior if this is override during signIn\n                                    user.getSession(function (err, result) {\n                                        if (err) {\n                                            logger.debug('failed to get the user session', err);\n                                            return rej(err);\n                                        }\n                                        user.globalSignOut({\n                                            onSuccess: function (data) {\n                                                logger.debug('global sign out success');\n                                                if (isSignedInHostedUI) {\n                                                    _this.oAuthSignOutRedirect(res, rej);\n                                                }\n                                                else {\n                                                    return res();\n                                                }\n                                            },\n                                            onFailure: function (err) {\n                                                logger.debug('global sign out failed', err);\n                                                return rej(err);\n                                            },\n                                        });\n                                    }, { clientMetadata: clientMetadata });\n                                }\n                                else {\n                                    logger.debug('user sign out', user);\n                                    user.signOut(function () {\n                                        if (isSignedInHostedUI) {\n                                            _this.oAuthSignOutRedirect(res, rej);\n                                        }\n                                        else {\n                                            return res();\n                                        }\n                                    });\n                                }\n                            })];\n                }\n            });\n        });\n    };\n    AuthClass.prototype.oAuthSignOutRedirect = function (resolve, reject) {\n        var isBrowser = JS.browserOrNode().isBrowser;\n        if (isBrowser) {\n            this.oAuthSignOutRedirectOrReject(reject);\n        }\n        else {\n            this.oAuthSignOutAndResolve(resolve);\n        }\n    };\n    AuthClass.prototype.oAuthSignOutAndResolve = function (resolve) {\n        this._oAuthHandler.signOut();\n        resolve();\n    };\n    AuthClass.prototype.oAuthSignOutRedirectOrReject = function (reject) {\n        this._oAuthHandler.signOut(); // this method redirects url\n        // App should be redirected to another url otherwise it will reject\n        setTimeout(function () { return reject('Signout timeout fail'); }, 3000);\n    };\n    /**\n     * Sign out method\n     * @\n     * @return - A promise resolved if success\n     */\n    AuthClass.prototype.signOut = function (opts) {\n        return __awaiter(this, void 0, void 0, function () {\n            var e_9, user;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this.cleanCachedItems()];\n                    case 1:\n                        _a.sent();\n                        return [3 /*break*/, 3];\n                    case 2:\n                        e_9 = _a.sent();\n                        logger.debug('failed to clear cached items');\n                        return [3 /*break*/, 3];\n                    case 3:\n                        if (!this.userPool) return [3 /*break*/, 7];\n                        user = this.userPool.getCurrentUser();\n                        if (!user) return [3 /*break*/, 5];\n                        return [4 /*yield*/, this.cognitoIdentitySignOut(opts, user)];\n                    case 4:\n                        _a.sent();\n                        return [3 /*break*/, 6];\n                    case 5:\n                        logger.debug('no current Cognito user');\n                        _a.label = 6;\n                    case 6: return [3 /*break*/, 8];\n                    case 7:\n                        logger.debug('no Congito User pool');\n                        _a.label = 8;\n                    case 8:\n                        /**\n                         * Note for future refactor - no reliable way to get username with\n                         * Cognito User Pools vs Identity when federating with Social Providers\n                         * This is why we need a well structured session object that can be inspected\n                         * and information passed back in the message below for Hub dispatch\n                         */\n                        dispatchAuthEvent('signOut', this.user, \"A user has been signed out\");\n                        this.user = null;\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AuthClass.prototype.cleanCachedItems = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: \n                    // clear cognito cached item\n                    return [4 /*yield*/, this.Credentials.clear()];\n                    case 1:\n                        // clear cognito cached item\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Change a password for an authenticated user\n     * @param {Object} user - The CognitoUser object\n     * @param {String} oldPassword - the current password\n     * @param {String} newPassword - the requested new password\n     * @return - A promise resolves if success\n     */\n    AuthClass.prototype.changePassword = function (user, oldPassword, newPassword, clientMetadata) {\n        var _this = this;\n        if (clientMetadata === void 0) { clientMetadata = this._config.clientMetadata; }\n        return new Promise(function (resolve, reject) {\n            _this.userSession(user).then(function (session) {\n                user.changePassword(oldPassword, newPassword, function (err, data) {\n                    if (err) {\n                        logger.debug('change password failure', err);\n                        return reject(err);\n                    }\n                    else {\n                        return resolve(data);\n                    }\n                }, clientMetadata);\n            });\n        });\n    };\n    /**\n     * Initiate a forgot password request\n     * @param {String} username - the username to change password\n     * @return - A promise resolves if success\n     */\n    AuthClass.prototype.forgotPassword = function (username, clientMetadata) {\n        if (clientMetadata === void 0) { clientMetadata = this._config.clientMetadata; }\n        if (!this.userPool) {\n            return this.rejectNoUserPool();\n        }\n        if (!username) {\n            return this.rejectAuthError(AuthErrorTypes.EmptyUsername);\n        }\n        var user = this.createCognitoUser(username);\n        return new Promise(function (resolve, reject) {\n            user.forgotPassword({\n                onSuccess: function () {\n                    resolve();\n                    return;\n                },\n                onFailure: function (err) {\n                    logger.debug('forgot password failure', err);\n                    dispatchAuthEvent('forgotPassword_failure', err, username + \" forgotPassword failed\");\n                    reject(err);\n                    return;\n                },\n                inputVerificationCode: function (data) {\n                    dispatchAuthEvent('forgotPassword', user, username + \" has initiated forgot password flow\");\n                    resolve(data);\n                    return;\n                },\n            }, clientMetadata);\n        });\n    };\n    /**\n     * Confirm a new password using a confirmation Code\n     * @param {String} username - The username\n     * @param {String} code - The confirmation code\n     * @param {String} password - The new password\n     * @return - A promise that resolves if success\n     */\n    AuthClass.prototype.forgotPasswordSubmit = function (username, code, password, clientMetadata) {\n        if (clientMetadata === void 0) { clientMetadata = this._config.clientMetadata; }\n        if (!this.userPool) {\n            return this.rejectNoUserPool();\n        }\n        if (!username) {\n            return this.rejectAuthError(AuthErrorTypes.EmptyUsername);\n        }\n        if (!code) {\n            return this.rejectAuthError(AuthErrorTypes.EmptyCode);\n        }\n        if (!password) {\n            return this.rejectAuthError(AuthErrorTypes.EmptyPassword);\n        }\n        var user = this.createCognitoUser(username);\n        return new Promise(function (resolve, reject) {\n            user.confirmPassword(code, password, {\n                onSuccess: function (success) {\n                    dispatchAuthEvent('forgotPasswordSubmit', user, username + \" forgotPasswordSubmit successful\");\n                    resolve(success);\n                    return;\n                },\n                onFailure: function (err) {\n                    dispatchAuthEvent('forgotPasswordSubmit_failure', err, username + \" forgotPasswordSubmit failed\");\n                    reject(err);\n                    return;\n                },\n            }, clientMetadata);\n        });\n    };\n    /**\n     * Get user information\n     * @async\n     * @return {Object }- current User's information\n     */\n    AuthClass.prototype.currentUserInfo = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var source, user, attributes, userAttrs, credentials, e_10, info, err_1, user;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        source = this.Credentials.getCredSource();\n                        if (!(!source || source === 'aws' || source === 'userPool')) return [3 /*break*/, 9];\n                        return [4 /*yield*/, this.currentUserPoolUser().catch(function (err) {\n                                return logger.error(err);\n                            })];\n                    case 1:\n                        user = _a.sent();\n                        if (!user) {\n                            return [2 /*return*/, null];\n                        }\n                        _a.label = 2;\n                    case 2:\n                        _a.trys.push([2, 8, , 9]);\n                        return [4 /*yield*/, this.userAttributes(user)];\n                    case 3:\n                        attributes = _a.sent();\n                        userAttrs = this.attributesToObject(attributes);\n                        credentials = null;\n                        _a.label = 4;\n                    case 4:\n                        _a.trys.push([4, 6, , 7]);\n                        return [4 /*yield*/, this.currentCredentials()];\n                    case 5:\n                        credentials = _a.sent();\n                        return [3 /*break*/, 7];\n                    case 6:\n                        e_10 = _a.sent();\n                        logger.debug('Failed to retrieve credentials while getting current user info', e_10);\n                        return [3 /*break*/, 7];\n                    case 7:\n                        info = {\n                            id: credentials ? credentials.identityId : undefined,\n                            username: user.getUsername(),\n                            attributes: userAttrs,\n                        };\n                        return [2 /*return*/, info];\n                    case 8:\n                        err_1 = _a.sent();\n                        logger.error('currentUserInfo error', err_1);\n                        return [2 /*return*/, {}];\n                    case 9:\n                        if (source === 'federated') {\n                            user = this.user;\n                            return [2 /*return*/, user ? user : {}];\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AuthClass.prototype.federatedSignIn = function (providerOrOptions, response, user) {\n        return __awaiter(this, void 0, void 0, function () {\n            var options, provider, customState, client_id, redirect_uri, provider, loggedInUser, token, identity_id, expires_at, credentials, currentUser;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this._config.identityPoolId && !this._config.userPoolId) {\n                            throw new Error(\"Federation requires either a User Pool or Identity Pool in config\");\n                        }\n                        // Ensure backwards compatability\n                        if (typeof providerOrOptions === 'undefined') {\n                            if (this._config.identityPoolId && !this._config.userPoolId) {\n                                throw new Error(\"Federation with Identity Pools requires tokens passed as arguments\");\n                            }\n                        }\n                        if (!(isFederatedSignInOptions(providerOrOptions) ||\n                            isFederatedSignInOptionsCustom(providerOrOptions) ||\n                            hasCustomState(providerOrOptions) ||\n                            typeof providerOrOptions === 'undefined')) return [3 /*break*/, 1];\n                        options = providerOrOptions || {\n                            provider: CognitoHostedUIIdentityProvider.Cognito,\n                        };\n                        provider = isFederatedSignInOptions(options)\n                            ? options.provider\n                            : options.customProvider;\n                        customState = isFederatedSignInOptions(options)\n                            ? options.customState\n                            : options.customState;\n                        if (this._config.userPoolId) {\n                            client_id = isCognitoHostedOpts(this._config.oauth)\n                                ? this._config.userPoolWebClientId\n                                : this._config.oauth.clientID;\n                            redirect_uri = isCognitoHostedOpts(this._config.oauth)\n                                ? this._config.oauth.redirectSignIn\n                                : this._config.oauth.redirectUri;\n                            this._oAuthHandler.oauthSignIn(this._config.oauth.responseType, this._config.oauth.domain, redirect_uri, client_id, provider, customState);\n                        }\n                        return [3 /*break*/, 4];\n                    case 1:\n                        provider = providerOrOptions;\n                        // To check if the user is already logged in\n                        try {\n                            loggedInUser = JSON.stringify(JSON.parse(this._storage.getItem('aws-amplify-federatedInfo')).user);\n                            if (loggedInUser) {\n                                logger.warn(\"There is already a signed in user: \" + loggedInUser + \" in your app.\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tYou should not call Auth.federatedSignIn method again as it may cause unexpected behavior.\");\n                            }\n                        }\n                        catch (e) { }\n                        token = response.token, identity_id = response.identity_id, expires_at = response.expires_at;\n                        return [4 /*yield*/, this.Credentials.set({ provider: provider, token: token, identity_id: identity_id, user: user, expires_at: expires_at }, 'federation')];\n                    case 2:\n                        credentials = _a.sent();\n                        return [4 /*yield*/, this.currentAuthenticatedUser()];\n                    case 3:\n                        currentUser = _a.sent();\n                        dispatchAuthEvent('signIn', currentUser, \"A user \" + currentUser.username + \" has been signed in\");\n                        logger.debug('federated sign in credentials', credentials);\n                        return [2 /*return*/, credentials];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Used to complete the OAuth flow with or without the Cognito Hosted UI\n     * @param {String} URL - optional parameter for customers to pass in the response URL\n     */\n    AuthClass.prototype._handleAuthResponse = function (URL) {\n        return __awaiter(this, void 0, void 0, function () {\n            var currentUrl, hasCodeOrError, hasTokenOrError, _a, accessToken, idToken, refreshToken, state, session, credentials, isCustomStateIncluded, currentUser, customState, err_2;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (this.oAuthFlowInProgress) {\n                            logger.debug(\"Skipping URL \" + URL + \" current flow in progress\");\n                            return [2 /*return*/];\n                        }\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, , 8, 9]);\n                        this.oAuthFlowInProgress = true;\n                        if (!this._config.userPoolId) {\n                            throw new Error(\"OAuth responses require a User Pool defined in config\");\n                        }\n                        dispatchAuthEvent('parsingCallbackUrl', { url: URL }, \"The callback url is being parsed\");\n                        currentUrl = URL || (JS.browserOrNode().isBrowser ? window.location.href : '');\n                        hasCodeOrError = !!(parse(currentUrl).query || '')\n                            .split('&')\n                            .map(function (entry) { return entry.split('='); })\n                            .find(function (_a) {\n                            var _b = __read(_a, 1), k = _b[0];\n                            return k === 'code' || k === 'error';\n                        });\n                        hasTokenOrError = !!(parse(currentUrl).hash || '#')\n                            .substr(1)\n                            .split('&')\n                            .map(function (entry) { return entry.split('='); })\n                            .find(function (_a) {\n                            var _b = __read(_a, 1), k = _b[0];\n                            return k === 'access_token' || k === 'error';\n                        });\n                        if (!(hasCodeOrError || hasTokenOrError)) return [3 /*break*/, 7];\n                        this._storage.setItem('amplify-redirected-from-hosted-ui', 'true');\n                        _b.label = 2;\n                    case 2:\n                        _b.trys.push([2, 6, , 7]);\n                        return [4 /*yield*/, this._oAuthHandler.handleAuthResponse(currentUrl)];\n                    case 3:\n                        _a = _b.sent(), accessToken = _a.accessToken, idToken = _a.idToken, refreshToken = _a.refreshToken, state = _a.state;\n                        session = new CognitoUserSession({\n                            IdToken: new CognitoIdToken({ IdToken: idToken }),\n                            RefreshToken: new CognitoRefreshToken({\n                                RefreshToken: refreshToken,\n                            }),\n                            AccessToken: new CognitoAccessToken({\n                                AccessToken: accessToken,\n                            }),\n                        });\n                        credentials = void 0;\n                        if (!this._config.identityPoolId) return [3 /*break*/, 5];\n                        return [4 /*yield*/, this.Credentials.set(session, 'session')];\n                    case 4:\n                        credentials = _b.sent();\n                        logger.debug('AWS credentials', credentials);\n                        _b.label = 5;\n                    case 5:\n                        isCustomStateIncluded = /-/.test(state);\n                        currentUser = this.createCognitoUser(session.getIdToken().decodePayload()['cognito:username']);\n                        // This calls cacheTokens() in Cognito SDK\n                        currentUser.setSignInUserSession(session);\n                        if (window && typeof window.history !== 'undefined') {\n                            window.history.replaceState({}, null, this._config.oauth.redirectSignIn);\n                        }\n                        dispatchAuthEvent('signIn', currentUser, \"A user \" + currentUser.getUsername() + \" has been signed in\");\n                        dispatchAuthEvent('cognitoHostedUI', currentUser, \"A user \" + currentUser.getUsername() + \" has been signed in via Cognito Hosted UI\");\n                        if (isCustomStateIncluded) {\n                            customState = state\n                                .split('-')\n                                .splice(1)\n                                .join('-');\n                            dispatchAuthEvent('customOAuthState', urlSafeDecode(customState), \"State for user \" + currentUser.getUsername());\n                        }\n                        //#endregion\n                        return [2 /*return*/, credentials];\n                    case 6:\n                        err_2 = _b.sent();\n                        logger.debug('Error in cognito hosted auth response', err_2);\n                        // Just like a successful handling of `?code`, replace the window history to \"dispose\" of the `code`.\n                        // Otherwise, reloading the page will throw errors as the `code` has already been spent.\n                        if (window && typeof window.history !== 'undefined') {\n                            window.history.replaceState({}, null, this._config.oauth.redirectSignIn);\n                        }\n                        dispatchAuthEvent('signIn_failure', err_2, \"The OAuth response flow failed\");\n                        dispatchAuthEvent('cognitoHostedUI_failure', err_2, \"A failure occurred when returning to the Cognito Hosted UI\");\n                        dispatchAuthEvent('customState_failure', err_2, \"A failure occurred when returning state\");\n                        return [3 /*break*/, 7];\n                    case 7: return [3 /*break*/, 9];\n                    case 8:\n                        this.oAuthFlowInProgress = false;\n                        return [7 /*endfinally*/];\n                    case 9: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Compact version of credentials\n     * @param {Object} credentials\n     * @return {Object} - Credentials\n     */\n    AuthClass.prototype.essentialCredentials = function (credentials) {\n        return {\n            accessKeyId: credentials.accessKeyId,\n            sessionToken: credentials.sessionToken,\n            secretAccessKey: credentials.secretAccessKey,\n            identityId: credentials.identityId,\n            authenticated: credentials.authenticated,\n        };\n    };\n    AuthClass.prototype.attributesToObject = function (attributes) {\n        var _this = this;\n        var obj = {};\n        if (attributes) {\n            attributes.map(function (attribute) {\n                if (attribute.Name === 'email_verified' ||\n                    attribute.Name === 'phone_number_verified') {\n                    obj[attribute.Name] =\n                        _this.isTruthyString(attribute.Value) || attribute.Value === true;\n                }\n                else {\n                    obj[attribute.Name] = attribute.Value;\n                }\n            });\n        }\n        return obj;\n    };\n    AuthClass.prototype.isTruthyString = function (value) {\n        return (typeof value.toLowerCase === 'function' && value.toLowerCase() === 'true');\n    };\n    AuthClass.prototype.createCognitoUser = function (username) {\n        var userData = {\n            Username: username,\n            Pool: this.userPool,\n        };\n        userData.Storage = this._storage;\n        var authenticationFlowType = this._config.authenticationFlowType;\n        var user = new CognitoUser(userData);\n        if (authenticationFlowType) {\n            user.setAuthenticationFlowType(authenticationFlowType);\n        }\n        return user;\n    };\n    AuthClass.prototype._isValidAuthStorage = function (obj) {\n        // We need to check if the obj has the functions of Storage\n        return (!!obj &&\n            typeof obj.getItem === 'function' &&\n            typeof obj.setItem === 'function' &&\n            typeof obj.removeItem === 'function' &&\n            typeof obj.clear === 'function');\n    };\n    AuthClass.prototype.noUserPoolErrorHandler = function (config) {\n        if (config) {\n            if (!config.userPoolId || !config.identityPoolId) {\n                return AuthErrorTypes.MissingAuthConfig;\n            }\n        }\n        return AuthErrorTypes.NoConfig;\n    };\n    AuthClass.prototype.rejectAuthError = function (type) {\n        return Promise.reject(new AuthError(type));\n    };\n    AuthClass.prototype.rejectNoUserPool = function () {\n        var type = this.noUserPoolErrorHandler(this._config);\n        return Promise.reject(new NoUserPoolError(type));\n    };\n    AuthClass.prototype.rememberDevice = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var currUser, error_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this.currentUserPoolUser()];\n                    case 1:\n                        currUser = _a.sent();\n                        return [3 /*break*/, 3];\n                    case 2:\n                        error_1 = _a.sent();\n                        logger.debug('The user is not authenticated by the error', error_1);\n                        return [2 /*return*/, Promise.reject('The user is not authenticated')];\n                    case 3:\n                        currUser.getCachedDeviceKeyAndPassword();\n                        return [2 /*return*/, new Promise(function (res, rej) {\n                                currUser.setDeviceStatusRemembered({\n                                    onSuccess: function (data) {\n                                        res(data);\n                                    },\n                                    onFailure: function (err) {\n                                        if (err.code === 'InvalidParameterException') {\n                                            rej(new AuthError(AuthErrorTypes.DeviceConfig));\n                                        }\n                                        else if (err.code === 'NetworkError') {\n                                            rej(new AuthError(AuthErrorTypes.NetworkError));\n                                        }\n                                        else {\n                                            rej(err);\n                                        }\n                                    },\n                                });\n                            })];\n                }\n            });\n        });\n    };\n    AuthClass.prototype.forgetDevice = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var currUser, error_2;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this.currentUserPoolUser()];\n                    case 1:\n                        currUser = _a.sent();\n                        return [3 /*break*/, 3];\n                    case 2:\n                        error_2 = _a.sent();\n                        logger.debug('The user is not authenticated by the error', error_2);\n                        return [2 /*return*/, Promise.reject('The user is not authenticated')];\n                    case 3:\n                        currUser.getCachedDeviceKeyAndPassword();\n                        return [2 /*return*/, new Promise(function (res, rej) {\n                                currUser.forgetDevice({\n                                    onSuccess: function (data) {\n                                        res(data);\n                                    },\n                                    onFailure: function (err) {\n                                        if (err.code === 'InvalidParameterException') {\n                                            rej(new AuthError(AuthErrorTypes.DeviceConfig));\n                                        }\n                                        else if (err.code === 'NetworkError') {\n                                            rej(new AuthError(AuthErrorTypes.NetworkError));\n                                        }\n                                        else {\n                                            rej(err);\n                                        }\n                                    },\n                                });\n                            })];\n                }\n            });\n        });\n    };\n    AuthClass.prototype.fetchDevices = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var currUser, error_3;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this.currentUserPoolUser()];\n                    case 1:\n                        currUser = _a.sent();\n                        return [3 /*break*/, 3];\n                    case 2:\n                        error_3 = _a.sent();\n                        logger.debug('The user is not authenticated by the error', error_3);\n                        throw new Error('The user is not authenticated');\n                    case 3:\n                        currUser.getCachedDeviceKeyAndPassword();\n                        return [2 /*return*/, new Promise(function (res, rej) {\n                                var cb = {\n                                    onSuccess: function (data) {\n                                        var deviceList = data.Devices.map(function (device) {\n                                            var deviceName = device.DeviceAttributes.find(function (_a) {\n                                                var Name = _a.Name;\n                                                return Name === 'device_name';\n                                            }) || {};\n                                            var deviceInfo = {\n                                                id: device.DeviceKey,\n                                                name: deviceName.Value,\n                                            };\n                                            return deviceInfo;\n                                        });\n                                        res(deviceList);\n                                    },\n                                    onFailure: function (err) {\n                                        if (err.code === 'InvalidParameterException') {\n                                            rej(new AuthError(AuthErrorTypes.DeviceConfig));\n                                        }\n                                        else if (err.code === 'NetworkError') {\n                                            rej(new AuthError(AuthErrorTypes.NetworkError));\n                                        }\n                                        else {\n                                            rej(err);\n                                        }\n                                    },\n                                };\n                                currUser.listDevices(MAX_DEVICES, null, cb);\n                            })];\n                }\n            });\n        });\n    };\n    return AuthClass;\n}());\nexport { AuthClass };\nexport var Auth = new AuthClass(null);\nAmplify.register(Auth);\n"]},"metadata":{},"sourceType":"module"}